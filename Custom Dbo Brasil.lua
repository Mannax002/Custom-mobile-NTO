bit32={};local v0=32;local v1=2^v0 ;bit32.bnot=function(v88) v88=v88%v1 ;return (v1-1) -v88 ;end;bit32.band=function(v89,v90) if (v90==255) then return v89%256 ;end if (v90==65535) then return v89%65536 ;end if (v90==4294967295) then return v89%4294967296 ;end v89,v90=v89%v1 ,v90%v1 ;local v91=0;local v92=1;for v215=1,v0 do local v216,v217=v89%2 ,v90%2 ;v89,v90=math.floor(v89/2 ),math.floor(v90/2 );if ((v216 + v217)==2) then v91=v91 + v92 ;end v92=2 * v92 ;end return v91;end;bit32.bor=function(v93,v94) if (v94==255) then return (v93-(v93%256)) + 255 ;end if (v94==65535) then return (v93-(v93%65536)) + 65535 ;end if (v94==4294967295) then return 4294967295;end v93,v94=v93%v1 ,v94%v1 ;local v95=0;local v96=1;for v218=1,v0 do local v219,v220=v93%2 ,v94%2 ;v93,v94=math.floor(v93/2 ),math.floor(v94/2 );if ((v219 + v220)>=1) then v95=v95 + v96 ;end v96=2 * v96 ;end return v95;end;bit32.bxor=function(v97,v98) v97,v98=v97%v1 ,v98%v1 ;local v99=0;local v100=1;for v221=1,v0 do local v222,v223=v97%2 ,v98%2 ;v97,v98=math.floor(v97/2 ),math.floor(v98/2 );if ((v222 + v223)==1) then v99=v99 + v100 ;end v100=2 * v100 ;end return v99;end;bit32.lshift=function(v101,v102) if (math.abs(v102)>=v0) then return 0;end v101=v101%v1 ;if (v102<0) then return math.floor(v101 * (2^v102) );else return (v101 * (2^v102))%v1 ;end end;bit32.rshift=function(v103,v104) if (math.abs(v104)>=v0) then return 0;end v103=v103%v1 ;if (v104>0) then return math.floor(v103 * (2^ -v104) );else return (v103 * (2^ -v104))%v1 ;end end;bit32.arshift=function(v105,v106) if (math.abs(v106)>=v0) then return 0;end v105=v105%v1 ;if (v106>0) then local v287=0;if (v105>=(v1/2)) then v287=v1-(2^(v0-v106)) ;end return math.floor(v105 * (2^ -v106) ) + v287 ;else return (v105 * (2^ -v106))%v1 ;end end;local v9=string.char;local v10=string.byte;local v11=string.sub;local v12=bit32 or bit ;local v13=v12.bxor;local v14=table.concat;local v15=table.insert;local function v16(v107,v108) local v109={};for v224=1, #v107 do v15(v109,v9(v13(v10(v11(v107,v224,v224 + 1 )),v10(v11(v108,1 + (v224% #v108) ,1 + (v224% #v108) + 1 )))%256 ));end return v14(v109);end setDefaultTab(v16("\229\204\212\41\245","\126\177\163\187\69\134\219\167"));UI.Separator();local v17;macro(1,function() if (player:getLevel()<10) then return;end if ((hppercent()<100) or (v17==nil)) then local v288={v16("\14\204\32\204\242","\156\67\173\74\165"),v16("\26\182\68\19\183\47\71\58","\38\84\215\41\118\220\70"),v16("\114\31\37","\158\48\118\66\114"),""};for v305,v306 in ipairs(v288) do local v307=v306   .. v16("\235\22\21\49\118\171\254\185\37\4\63\124\171","\155\203\68\112\86\19\197") ;say(v307);if (v17==v307:trim():lower()) then return;end end end end);onTalk(function(v110,v111,v112,v113) if (v110~=player:getName()) then return;end if (v112~=44) then return;end local v114=v113:trim():lower();if (v114:find(v16("\84\216\49\249\78\125\247\249\82\212\57\242","\152\38\189\86\156\32\24\133"))) then v17=v114;end end);onTalk(function(v115,v116,v117,v118,v119,v120) if (v115~=v16("\222\91\162\85\239\82\163\6\200\86\183\79\243\89","\38\156\55\199")) then return;end if (v118:find(v16("\141\110\104\39\6\52\251\82\189\116\60\56\18\102\251\3\167\123\121\58\22\119\255\81","\35\200\29\28\72\115\20\154"))) then schedule(200,function() NPC.say(v16("\27\179\212\204\158","\84\121\223\177\191\237\76"));schedule(400,function() NPC.say(v16("\162\83\218","\161\219\54\169\192\90\48\80"));end);end);end end);FollowAttack={[v16("\79\78\1\34\90","\69\41\34\96")]={[v16("\181\196\217\5\16\46\146\204\217\58\3\63\180\194\213\6\7","\75\220\163\183\106\98")]=true,[v16("\18\168\142\52\208\17\179\132\57","\185\98\218\235\87")]=0,[v16("\194\59\41\233\204\175\232\46\34\231\202\191\217\57\52","\202\171\92\71\134\190")]=true}};FollowAttack.getDirection=function(v121,v122) if (v122==0) then v121.y=v121.y-1 ;elseif (v122==1) then v121.x=v121.x + 1 ;elseif (v122==2) then v121.y=v121.y + 1 ;elseif (v122==3) then v121.x=v121.x-1 ;end return v121;end;FollowAttack.Icon=addIcon(v16("\15\206\32\132\38\214\108\169\61\213\45\139\34","\232\73\161\76"),{[v16("\178\205\71\80","\126\219\185\34\61")]=7657,[v16("\24\203\70\102","\135\108\174\62\18\30\23\147")]=v16("\144\230\38\199\23\185\115\230\162\253\43\200\19","\167\214\137\74\171\120\206\83")},macro(1,function() if ( not g_game.isAttacking() or (g_game.isAttacking() and  not g_game.getAttackingCreature():isPlayer())) then return;end local v123=pos();local v124=g_game.getAttackingCreature();local v125=v124:getPosition();if (getDistanceBetween(v123,v125)==0) then g_game.setChaseMode(0);end if (getDistanceBetween(v123,v125)<=1) then return;end local v126=findPath(v123,v125,20,FollowAttack.flags);if  not v126 then return;end local v127=v123;for v225,v226 in ipairs(v126) do if (v225>6) then break;end v127=FollowAttack.getDirection(v127,v226);end v127=g_map.getTile(v127);use(v127:getTopUseThing());end));UI.Separator();setDefaultTab(v16("\191\255\61\81\235","\199\235\144\82\61\152"));local v20={v16("\53\3\187\34\9\30\182\107\37\23\171\57\14\21\177\46\11\26\182","\75\103\118\217")};local v21={v16("\227\85\126\29\188\18\230\65\98\17\190\18\206\81\100\0","\126\167\52\16\116\217")};local v22={v16("\225\41\47\146\159\24\238\195\47\50\143\178\31","\156\168\78\64\224\212\121"),v16("\45\239\170\250\46\254\170\254\46\220\132\224\47\207","\174\103\142\197")};local v23={v16("\126\9\121\17\14\119","\152\54\72\63\88\69\62"),v16("\243\232\203\117\231\247\207\115\224\229\192\119\240\225\201\105\241\246\220\125","\60\180\164\142"),v16("\49\118\36\26\15\196\32\121\115\36\42\38\255\28\81\93\0\32\53\226","\114\56\62\101\73\71\141")};macro(100,v16("\157\231\222\201\161\169\250\200\180","\164\216\137\187"),function() attcked=g_game.getAttackingCreature();local v128=100;local v129=nil;for v227,v228 in ipairs(getSpectators(posz())) do if ( not attcked or attcked:isMonster() or (attcked:isPlayer() and (v228:getHealthPercent()<=(attcked:getHealthPercent() * 0.6)))) then if (v228:isPlayer() and (v228:getEmblem()~=1) and (v228:getShield()<=2)) then if table.find(v20,v228:getName()) then g_game.attack(v228);return;end end end end for v229,v230 in ipairs(getSpectators(posz())) do if ( not attcked or attcked:isMonster() or (attcked:isPlayer() and (v230:getHealthPercent()<=(attcked:getHealthPercent() * 0.6)))) then if (v230:isPlayer() and (v230:getEmblem()~=1) and (v230:getShield()<=2)) then if table.find(v21,v230:getName()) then g_game.attack(v230);return;end end end end for v231,v232 in ipairs(getSpectators(posz())) do if ( not attcked or attcked:isMonster() or (attcked:isPlayer() and (v232:getHealthPercent()<=(attcked:getHealthPercent() * 0.6)))) then if (v232:isPlayer() and (v232:getEmblem()~=1) and (v232:getShield()<=2)) then if table.find(v22,v232:getName()) then g_game.attack(v232);return;end end end end for v233,v234 in ipairs(getSpectators(posz())) do if ( not attcked or attcked:isMonster() or (attcked:isPlayer() and (v234:getHealthPercent()<=(attcked:getHealthPercent() * 0.6)))) then if (v234:isPlayer() and (v234:getEmblem()~=1) and (v234:getShield()<=2)) then if table.find(v23,v234:getName()) then g_game.attack(v234);return;end end end end for v235,v236 in ipairs(getSpectators(posz())) do if ( not attcked or attcked:isMonster() or (attcked:isPlayer() and (v236:getHealthPercent()<=(attcked:getHealthPercent() * 0.6)))) then if (v236:isPlayer() and (v236:getEmblem()~=1) and (v236:getShield()<=2)) then if (v236:getHealthPercent()<=v128) then v128=v236:getHealthPercent();v129=getCreatureById(v236:getId());end end end end if (v129~=nil) then g_game.attack(v129);return;end end);macro(200,v16("\235\227\61\190\169\233\75\225\237\36\190\170\187","\107\178\134\81\210\198\158"),function() for v237,v238 in ipairs(getSpectators(posz())) do attacked=g_game.getAttackingCreature();if ( not attacked or attacked:isMonster() or (attacked:isPlayer() and (v238:getHealthPercent()<(attacked:getHealthPercent() * 0.6)))) then if (v238:isPlayer() and (v238~=player) and (v238:getHealthPercent()<90) and (v238:getEmblem()~=1) and (v238:getSkull()==1) and (v238:getShield()<=2)) then g_game.attack(v238);end end end delay(100);end);macro(100,function() if ((player:getShield()==3) or (player:getShield()==5) or (player:getShield()==7) or (player:getShield()==9)) then return;end for v239,v240 in ipairs(getSpectators(posz())) do if (v240:isPlayer() and (v240:getEmblem()==1) and v240:isPartyLeader()) then g_game.partyJoin(v240:getId());end end end);macro(200,v16("\15\6\139\210\175\120\61\137\211\166\52\78\178\237\239","\202\88\110\226\166"),function() for v241,v242 in ipairs(getSpectators(posz())) do attacked=g_game.getAttackingCreature();if ( not attacked or attacked:isMonster() or (attacked:isPlayer() and (v242:getHealthPercent()<(attacked:getHealthPercent() * 0.6)))) then if (v242:isPlayer() and (v242~=player) and (v242:getHealthPercent()<85) and (v242:getEmblem()~=1) and (v242:getSkull()==3) and (v242:getShield()<=2)) then g_game.attack(v242);end end end delay(100);end);macro(200,v16("\244\7\139\227\207\131\60\137\226\198\207\79\163\251\198","\170\163\111\226\151"),function() for v243,v244 in ipairs(getSpectators(posz())) do attacked=g_game.getAttackingCreature();if ( not attacked or attacked:isMonster() or (attacked:isPlayer() and (v244:getHealthPercent()<(attacked:getHealthPercent() * 0.6)))) then if (v244:isPlayer() and (v244~=player) and (v244:getEmblem()~=1) and (v244:getSkull()==3) and (v244:getShield()<=2)) then g_game.attack(v244);end end end delay(100);end);UI.Separator();local v24={};local v25=g_ui.getRootWidget():recursiveGetChildById(v16("\1\63\187\54\90\50\59","\73\113\80\210\88\46\87"));local v26={x=v25:getPosition().x/v25:getWidth() ,y=v25:getPosition().y/v25:getHeight() };local v27={[v16("\180\60","\135\225\76\173\114")]={0, -6},[v16("\62\226\175\190","\199\122\141\216\208\204\221")]={0,6},[v16("\129\216\22\228","\150\205\189\112\144\24")]={ -7,0},[v16("\23\141\184\68\16","\112\69\228\223\44\100\232\113")]={7,0}};v24.logic=function() local v130=pos();local v131={x=v25:getPosition().x/v25:getWidth() ,y=v25:getPosition().y/v25:getHeight() };local v132={x=v26.x-v131.x ,y=v26.y-v131.y };if ((v132.y<0.46) and (v132.y> -0.46)) then if (v132.x>0) then v130.x=v130.x + v27[v16("\248\26\1\199","\230\180\127\103\179\214\28")][1] ;elseif (v132.x<0) then v130.x=v130.x + v27[v16("\190\12\88\78\240","\128\236\101\63\38\132\33")][1] ;else return;end elseif ((v132.x<0.46) and (v132.x> -0.46)) then if (v132.y>0) then v130.y=v130.y + v27[v16("\153\185","\175\204\201\113\36\214\139")][2] ;elseif (v132.y<0) then v130.y=v130.y + v27[v16("\99\195\34\210","\100\39\172\85\188")][2] ;else return;end end local v133=g_map.getTile(v130);if  not v133 then return;end g_game.use(v133:getTopUseThing());end;testMacro=macro(1,v24.logic);test1=addIcon(v16("\143\109\190\173\50\189","\83\205\24\217\224"),{[v16("\239\209\200\48","\93\134\165\173")]=3074,[v16("\170\247\217\214","\30\222\146\161\162\90\174\210")]=v16("\199\91\119\39\228\94","\106\133\46\16")},testMacro);test1:breakAnchors();test1:move(10,100);local v29=false;local v30=nil;local v31;local v32=modules.corelib.g_mouse;local v33=modules.corelib.g_keyboard;local v34={{[v16("\86\33\126\249","\32\56\64\19\156\58")]=v16("\105\192\240\88\81\243\142\83\204\234","\224\58\168\133\54\58\146"),[v16("\93\95\88\233\116\136\132\14","\107\57\54\43\157\21\230\231")]=8},{[v16("\213\138\28\240","\175\187\235\113\149\217\188")]=v16("\8\170\141\73\243\118\106\40","\24\92\207\225\44\131\25"),[v16("\79\218\171\88\26\115\72\214","\29\43\179\216\44\123")]=4}};local v27={[v16("\136\201","\44\221\185\64")]={0, -6},[v16("\37\232\95\81","\19\97\135\40\63")]={0,6},[v16("\130\89\53\47","\81\206\60\83\91\79")]={ -7,0},[v16("\124\162\215\122\59","\196\46\203\176\18\79\163\45")]={7,0}};local v35={[v16("\141\50","\143\216\66\30\126\68\155")]="n",[v16("\142\199\26\197","\129\202\168\109\171\165\195\183")]="s",[v16("\14\93\49\204","\134\66\56\87\184\190\116")]="w",[v16("\14\56\14\179\13","\85\92\81\105\219\121\139\65")]="e"};local v36={n=function(v134,v135) return v134.y>v135.y ;end,s=function(v136,v137) return v136.y<v137.y ;end,w=function(v138,v139) return v138.x>v139.x ;end,e=function(v140,v141) return v140.x<v141.x ;end};local v37={n=function(v142,v143) return v142.position.y<v143.position.y ;end,s=function(v144,v145) return v144.position.y>v145.position.y ;end,w=function(v146,v147) return v146.position.x<v147.position.x ;end,e=function(v148,v149) return v148.position.x>v149.position.x ;end};local v38=function(v150,v151) local v152=1;local v153=v36[v151];local v154=player:getPosition();while true do local v245=v150[v152];if (v245==nil) then break;end if  not v153(v154,v245.position) then table.remove(v150,v152);v152=0;end v152=v152 + 1 ;end end;local function v39(v155) v29=v155;if (keepTarget~=nil) then keepTarget.isStacking=v155;end if ((v155==true) and tyrBot) then tyrBot.comboDelay=now + 500 ;end if ((v155==false) and (v30~=nil) and (v30==g_game.getAttackingCreature())) then v30=nil;g_game.cancelAttack();end end function Stack() local v156=player:getPosition();local v157={};local v158=getSpectators(v156.z);for v246,v247 in ipairs(v158) do if (v247:isMonster()) then local v308=v247:getPosition();if ((v308~=nil) and (getDistanceBetween(v156,v308)>=1)) then local v328={[v16("\254\161\85\68\104\202\239\182","\191\157\211\48\37\28")]=v247,[v16("\207\16\231\21\46\214\16\250","\90\191\127\148\124")]=v308};table.insert(v157,v328);end end end table.sort(v157,function(v248,v249) return getDistanceBetween(v156,v248.position)<getDistanceBetween(v156,v249.position) ;end);local v159=v157[1];if (v159==nil) then return false;end v39(true);v30=v159.creature;if (g_game.getAttackingCreature()~=v159.creature) then g_game.attack(v159.creature);end local v161=getDistanceBetween(v156,v159.position);if (v161>7) then say(v16("\75\143\59\25\115\134\32\30\124\136","\119\24\231\78"));else say(v16("\182\40\169\79\204\79\3\150","\113\226\77\197\42\188\32"));end return true;end macro(1,function() if (v33.isKeyPressed(v16("\28\68","\213\90\118\148"))) then if (Stack()) then return;end end v39(false);end);UI.Separator();setDefaultTab(v16("\111\33\187\90\94","\45\59\78\212\54"));local v40={};v40.times={[v16("\35\94\150\133\141\47\163\249\20\89","\144\112\54\227\235\230\78\205")]=6,[v16("\186\37\31\253\211\79","\59\211\72\111\156\176")]=1,[v16("\91\138\215\36\92\136","\77\46\231\131")]=2,[v16("\188\85\165\84","\32\218\52\214")]=2};if (type(storage.exhaustCombo)~=v16("\90\22\51\164\244","\58\46\119\81\200\145\208\37")) then storage.exhaustCombo={};end v40.vocations={[v16("\12\131\59\185","\86\75\236\80\204\201\221")]={[v16("\65\73\98\139\245\138\124\72\115\138","\235\18\33\23\229\158")]=v16("\99\178\212\181\91\187\207\178\84\181","\219\48\218\161"),[v16("\237\124\108\72\216\91","\128\132\17\28\41\187\47")]=v16("\37\32\7\61\82\15\114\32\51\78\21\114\39\46\73\0\49\13","\61\97\82\102\90"),[v16("\185\35\159\66\213\88","\105\204\78\203\43\167\55\126")]=v16("\150\191\51\27\1\68\245\72\176\161\38\16","\49\197\202\67\126\115\100\167"),[v16("\49\90\204\61","\62\87\59\191\73\224\54")]=v16("\245\7\244\211\232\9\239\137\236\3\247\204\239\3\247\204\239\3","\169\135\98\154")},[v16("\236\120\35\81\233\50","\168\171\23\68\52\157\83")]={[v16("\199\121\224\163\46\44\137\253\117\250","\231\148\17\149\205\69\77")]=v16("\179\175\210\245\92\254\142\174\195\244","\159\224\199\167\155\55"),[v16("\254\254\44\211\244\231","\178\151\147\92")]=v16("\175\242\65\48\29\12\83\129\237\77\49\6","\26\236\157\44\82\114\44"),[v16("\63\35\225\82\56\33","\59\74\78\181")]=v16("\22\197\91\72\183\48\194\78\26\145\55\212\91\81\182\55","\211\69\177\58\58"),[v16("\177\228\106\225","\171\215\133\25\149\137")]=v16("\210\220\51\232\235\37\239\86\161\238\51\246\227","\34\129\168\82\154\143\80\156")},[v16("\181\179\58\0\93\70\136\139","\233\229\210\83\107\40\46")]={[v16("\242\74\39\216\14\192\76\59\210\10","\101\161\34\82\182")]=v16("\202\1\88\228\210\236\133\110\210\8\73\246\194\240","\78\136\109\57\158\187\130\226"),[v16("\55\50\233\240\61\43","\145\94\95\153")]=v16("\223\216\6\219\71\185\250\141\39\221\65\163","\215\157\173\116\181\46"),[v16("\32\185\191\251\200\58","\186\85\212\235\146")]=v16("\224\148\4\240\48\224\95\130\178\30\241\45","\56\162\225\118\158\89\142"),[v16("\90\4\211\187","\184\60\101\160\207\66")]=v16("\19\151\110\178\56\140\123\252\6\131\106\185\34","\220\81\226\28")},[v16("\57\220\144\254\228","\167\115\181\226\155\138")]={[v16("\209\42\242\82\112\112\200\235\38\232","\166\130\66\135\60\27\17")]=v16("\119\66\219\123\59\69\68\199\113\63","\80\36\42\174\21"),[v16("\71\29\39\123\77\4","\26\46\112\87")]=v16("\154\44\166\118\176\255\108\185\169\34\168\96","\212\217\67\203\20\223\223\37"),[v16("\175\128\156\219\168\130","\178\218\237\200")]=v16("\134\186\241\213\164\245\206\217\162","\176\214\213\134"),[v16("\242\172\165\192","\57\148\205\214\180\200\54")]=v16("\56\232\38\32\127\17\248\117\18\122\19\238\61","\22\114\157\85\84")},[v16("\236\194\7\208\82","\200\164\171\115\164\61\150")]={[v16("\141\252\22\75\136\191\250\10\65\140","\227\222\148\99\37")]=v16("\7\91\95\243\185\0\89\91\230\185\5\91\70\247\245\115\98\93\255\247\39\18\115\226\237\50\81\89","\153\83\50\50\150"),[v16("\84\123\99\29\112\191","\45\61\22\19\124\19\203")]=v16("\245\27\0\240\66\67\178\200\2\77\193\16\117\180\206\0\77\197\23\124\170\196","\217\161\114\109\149\98\16"),[v16("\7\45\12\117\174\123","\20\114\64\88\28\220")]=v16("\5\8\223\177\184\227\182\56\17\146\153\247\220\178\37\14\196","\221\81\97\178\212\152\176"),[v16("\203\230\14\239","\122\173\135\125\155")]=v16("\176\200\13\188\127\2\195\141\209\64\159\51\48\219\140\129\51\178\58\38\205\150","\168\228\161\96\217\95\81")},[v16("\250\223\42\78\32\94\223\145\13\14\126","\55\187\177\78\60\79")]={[v16("\30\198\74\229\77\206\142\36\202\80","\224\77\174\63\139\38\175")]=v16("\183\73\77\32\143\64\86\39\128\78","\78\228\33\56"),[v16("\199\115\162\2\134\218","\229\174\30\210\99")]=v16("\56\226\139\83\226\125\16\22\253\135\82\249","\89\123\141\230\49\141\93"),[v16("\230\124\194\5\2\69","\42\147\17\150\108\112")]=v16("\34\167\39\118\233\168\45\163\33\115\254\168\46\178\57\126\228\227","\136\111\198\77\31\135"),[v16("\4\8\180\66","\201\98\105\199\54\221\132\119")]=v16("\154\3\141\53\11\59\185\182\25\144\97\39\59\169\171\11\154\97\32\32\160\181\9\151\50","\204\217\108\227\65\98\85")},[v16("\124\202\249\233\63","\160\62\163\149\133\76")]={[v16("\229\168\24\33\200\215\174\4\43\204","\163\182\192\109\79")]=v16("\7\46\21\206\254\53\40\9\196\250","\149\84\70\96\160"),[v16("\49\11\29\236\59\18","\141\88\102\109")]=v16("\144\92\199\114\21\125\124\204\163\82\201\100","\161\211\51\170\16\122\93\53"),[v16("\238\163\134\33\233\161","\72\155\206\210")]=v16("\100\127\81\28\38\85\58\103\6\60\82","\83\38\26\52\110"),[v16("\94\22\52\82","\38\56\119\71")]=v16("\209\234\93\196\48\69\179\197\77\210\34\83\254\234\86\194","\54\147\143\56\182\69")},[v16("\253\132\249\69\222","\191\182\225\159\41")]={[v16("\24\26\61\91\128\134\204\34\22\39","\162\75\114\72\53\235\231")]=v16("\191\52\81\236\88\3\130\53\64\237","\98\236\92\36\130\51"),[v16("\173\20\28\187\70\188","\80\196\121\108\218\37\200\213")]=v16("\35\124\15\125\68\78\163\13\99\3\124\95","\234\96\19\98\31\43\110"),[v16("\19\18\102\206\190\125","\235\102\127\50\167\204\18")]=v16("\119\168\242\34\74\58\89\170\254\54\4\12\69\179\244\48\81\58\95\225\214\43\77","\78\48\193\149\67\36"),[v16("\54\31\147\12","\33\80\126\224\120")]=v16("\203\161\4\197\82\248\161\8\207\73\172\138\22\214\93\255\189\23\203","\60\140\200\99\164")},[v16("\177\241\3\35\182\134","\194\231\148\100\70")]={[v16("\117\68\212\173\253\201\72\69\197\172","\168\38\44\161\195\150")]=v16("\179\244\151\120\59\233\184\31\132\243","\118\224\156\226\22\80\136\214"),[v16("\75\227\73\129\65\250","\224\34\142\57")]=v16("\253\168\200\223\124\177\116\3\206\166\198\201","\110\190\199\165\189\19\145\61"),[v16("\207\230\67\225\153\200","\167\186\139\23\136\235")]=v16("\60\188\134\12\22\245\187\5\19\187\141","\109\122\213\232"),[v16("\232\246\177\36","\80\142\151\194")]=v16("\48\199\110\77\9\207\121\12\33\202\118\95\23","\44\99\166\23")},[v16("\76\254\42\53\60\168\115","\196\28\151\73\86\83")]={[v16("\192\11\60\30\137\89\22\127\247\12","\22\147\99\73\112\226\56\120")]=v16("\139\125\247\251\134\185\123\235\241\130","\237\216\21\130\149"),[v16("\139\67\79\94\179\221","\62\226\46\63\63\208\169")]=v16("\198\22\88\129\16\77\6\83\245\24\86\151","\62\133\121\53\227\127\109\79"),[v16("\5\25\6\252\196\161","\194\112\116\82\149\182\206")]=v16("\17\173\64\20\218\237\0\60\232\107\10\193\236\15\61\173","\110\89\200\44\120\160\130"),[v16("\173\194\88\82","\45\203\163\43\38\35\42\91")]=v16("\225\144\204\38\149\233\124\215\137\208\99\160\187\85\220\132\216\38","\52\178\229\188\67\231\201")},[v16("\2\16\7","\67\65\33\48\100\151\60")]={[v16("\236\239\187\214\248\222\233\167\220\252","\147\191\135\206\184")]=v16("\183\32\179\207\211\82\188\141\44\169","\210\228\72\198\161\184\51"),[v16("\63\68\227\17\112\218","\174\86\41\147\112\19")]=v16("\120\15\128\9\42\79\56\166\75\1\142\31","\203\59\96\237\107\69\111\113"),[v16("\49\27\152\232\35\255","\183\68\118\204\129\81\144")]=v16("\35\168\119\229\75\160\1\160\114","\226\110\205\16\132\107"),[v16("\237\194\243\205","\33\139\163\128\185")]=v16("\115\93\5\218\91\65\68\252\88\85\6","\190\55\56\100")},[v16("\113\160\52\31\29","\147\54\207\92\126\115\131")]={[v16("\62\57\32\115\6\127\3\56\49\114","\30\109\81\85\29\109")]=v16("\204\121\65\184\61\223\242\246\117\91","\156\159\17\52\214\86\190"),[v16("\167\225\173\189\173\251","\220\206\143\221")]=v16("\165\114\32\21\215\140\251\139\109\44\20\204","\178\230\29\77\119\184\172"),[v16("\224\179\62\18\101\247","\152\149\222\106\123\23")]=v16("\240\39\229\80\188\203\35\182\112\162\210\52\242\3\148\201\50\247\64\190","\213\189\70\150\35"),[v16("\73\84\103\28","\104\47\53\20")]=v16("\144\77\152\29\182\6\173\12\163\16\189\28\183","\111\195\44\225\124\220")},[v16("\236\84\21\125\160\184","\203\184\38\96\19\203")]={[v16("\10\123\108\79\197\56\125\112\69\193","\174\89\19\25\33")]=v16("\28\26\71\64\252\134\5\38\22\93","\107\79\114\50\46\151\231"),[v16("\48\171\165\40\137\45","\160\89\198\213\73\234\89\215")]=v16("\107\126\185\252\202\8\88\185\238\196\75\101","\165\40\17\212\158"),[v16("\240\212\60\58\52\234","\70\133\185\104\83")]=v16("\41\68\87\57\192\18\64\4\25\222\11\87\64\106\232\16\81\69\41\194","\169\100\37\36\74"),[v16("\6\134\177\68","\48\96\231\194")]=v16("\251\91\23\44\19\209\161\195\234\86\15\62\13","\227\168\58\110\77\121\184\207")},[v16("\88\57\179\76","\197\27\92\223\32\209\187\17")]={[v16("\48\87\214\245\8\94\205\242\7\80","\155\99\63\163")]=v16("\177\217\180\131\178\133\140\216\165\130","\228\226\177\193\237\217"),[v16("\61\189\51\231\55\164","\134\84\208\67")]=v16("\48\163\139\94\28\236\175\81\3\173\133\72","\60\115\204\230"),[v16("\242\55\223\121\245\53","\16\135\90\139")]=v16("\121\113\1\50\14\118\119\89\118","\24\52\20\102\83\46\52"),[v16("\194\46\50\48","\111\164\79\65\68")]=v16("\245\204\147\219\60\170\238\220\143\210\110\205\212\216\141\223\42\239","\138\166\185\227\190\78")},[v16("\232\123\202\59\87\49","\121\171\20\165\87\50\67")]={[v16("\245\48\172\56\178\3\200\49\189\57","\98\166\88\217\86\217")]=v16("\197\254\108\15\141\221\248\255\125\14","\188\150\150\25\97\230"),[v16("\211\132\79\3\15\249","\141\186\233\63\98\108")]=v16("\210\229\33\180\42\177\195\33\166\36\242\254","\69\145\138\76\214"),[v16("\101\194\189\128\173\25","\118\16\175\233\233\223")]=v16("\165\139\35\186\174\169\113\138\151\33","\29\235\228\85\219\142\235"),[v16("\59\213\169\201","\50\93\180\218\189\23\46\71")]=v16("\240\171\77\77\4\254\68\223\183\79","\40\190\196\59\44\36\188")},[v16("\26\87\217\177\224\124","\109\92\37\188\212\154\29")]={[v16("\55\231\177\205\58\91\10\230\160\204","\58\100\143\196\163\81")]=v16("\41\74\54\173\52\72\235\7\30\77","\110\122\34\67\195\95\41\133"),[v16("\124\188\75\75\213\97","\182\21\209\59\42")]=v16("\148\88\200\31\46\254\158\90\213\28\34\170","\222\215\55\165\125\65"),[v16("\57\220\242\19\224\206","\42\76\177\166\122\146\161\141")]=v16("\128\156\12\194\57\93\172\143\11\212\120\120","\22\197\234\101\174\25"),[v16("\43\53\182\200","\230\77\84\197\188\22\207\183")]=v16("\215\27\208\253\204\131\252\52\234\0","\85\153\116\166\156\236\193\144")},[v16("\137\225\71\186\234\64\134\239\66","\96\196\128\45\211\132")]={[v16("\6\133\110\81\217\174\186\209\49\130","\184\85\237\27\63\178\207\212")]=v16("\59\81\28\81\3\88\7\86\12\86","\63\104\57\105"),[v16("\2\138\180\69\8\147","\36\107\231\196")]=v16("\126\186\175\133\82\245\139\138\77\180\161\147","\231\61\213\194"),[v16("\28\160\9\122\27\162","\19\105\205\93")]=v16("\140\16\202\136\49\170\28\158\160\43\189\9\221\138","\95\201\104\190\225"),[v16("\169\202\210\218","\174\207\171\161")]=v16("\207\241\2\179\200\222\227\245\77\209\249\219\225","\183\141\158\109\147\152")},[v16("\14\27\233\0\53","\108\76\105\134")]={[v16("\216\205\164\239\197\234\203\184\229\193","\174\139\165\209\129")]=v16("\144\187\247\207\205\2\126\113\167\188","\24\195\211\130\161\166\99\16"),[v16("\79\14\249\45\80\2","\118\38\99\137\76\51")]=v16("\222\41\8\16\6\96\212\43\21\19\10\52","\64\157\70\101\114\105"),[v16("\85\165\147\234\2\79","\112\32\200\199\131")]=v16("\1\85\72\189\204\185\98\14\81\79\176","\66\76\48\60\216\163\203"),[v16("\188\135\106\231","\68\218\230\25\147\63\174")]=v16("\143\43\65\77\189\184\35\71\95\163\237\8\95\77\165\185","\214\205\74\51\44")},[v16("\217\29\186","\23\154\44\130\156")]={[v16("\34\174\184\160\61\18\31\175\169\161","\115\113\198\205\206\86")]=v16("\183\95\235\84\143\86\240\83\128\88","\58\228\55\158"),[v16("\189\132\192\47\63\185","\85\212\233\176\78\92\205")]=v16("\105\87\133\224\69\24\161\239\90\89\139\246","\130\42\56\232"),[v16("\255\184\16\234\82\48","\95\138\213\68\131\32")]=v16("\15\62\168\79\54\1\33\164\77\108\43\38","\22\74\72\193\35"),[v16("\42\120\247\76","\56\76\25\132")]=v16("\122\196\170\34\195\71\129\137\41\194\92","\175\62\161\203\70")},[v16("\9\200\193","\85\92\189\163\115")]={[v16("\26\164\37\54\34\173\62\49\45\163","\88\73\204\80")]=v16("\29\139\5\72\34\219\32\138\20\73","\186\78\227\112\38\73"),[v16("\245\90\237\84\80\110","\26\156\55\157\53\51")]=v16("\175\215\27\219\183\16\165\213\6\216\187\68","\48\236\184\118\185\216"),[v16("\240\176\99\57\221\59","\84\133\221\55\80\175")]=v16("\152\255\48\175\201\95\169\167\5\178\211\93\190\236","\60\221\135\68\198\167"),[v16("\232\188\235\151","\185\142\221\152\227\34")]=v16("\104\204\89\241\3\17\246\84\201","\151\56\165\55\154\35\83")},[v16("\135\76\17\235\174","\142\192\35\101")]={[v16("\229\125\60\173\236\141\162\31\210\122","\118\182\21\73\195\135\236\204")]=v16("\59\52\15\78\15\12\243\1\56\21","\157\104\92\122\32\100\109"),[v16("\170\171\223\203\62\51","\203\195\198\175\170\93\71\237")]=v16("\13\68\51\215\94\81\213\35\91\63\214\69","\156\78\43\94\181\49\113"),[v16("\103\229\240\170\25\76","\25\18\136\164\195\107\35")]=v16("\195\44\164\70\121\189\219\189\168\8\177\95\126\179\210\177\231\35","\216\136\77\201\47\18\220\161"),[v16("\43\237\56\206","\226\77\140\75\186\104\188")]=v16("\154\198\201\61\70\188\142\242\51\78\170\218","\47\217\174\176\95")},[v16("\155\213\127\0\187\20\76\52\173\211\125\17","\70\216\189\22\98\210\52\24")]={[v16("\233\215\182\137\216\219\209\170\131\220","\179\186\191\195\231")]=v16("\202\55\13\234\242\62\22\237\253\48","\132\153\95\120"),[v16("\184\191\30\44\244\206","\192\209\210\110\77\151\186")]=v16("\195\12\47\235\240\132\201\14\50\232\252\208","\164\128\99\66\137\159"),[v16("\21\132\221\183\18\134","\222\96\233\137")]=v16("\146\178\170\22\131\242\234\188\243\130\7\152\255\255\170\186\168\17","\144\217\211\199\127\232\147"),[v16("\254\46\45\60","\36\152\79\94\72\181\37\98")]=v16("\244\208\94\61\222\221\7\29\219\217\84\43","\95\183\184\39")},[v16("\150\48\232\42\81\146","\98\213\95\135\70\52\224")]={[v16("\205\171\220\121\95\255\173\192\115\91","\52\158\195\169\23")]=v16("\73\180\39\122\141\52\117\130\126\179","\235\26\220\82\20\230\85\27"),[v16("\129\172\249\195\119\156","\20\232\193\137\162")]=v16("\1\208\200\164\232\204\62\124\50\222\198\178","\17\66\191\165\198\135\236\119"),[v16("\26\162\154\26\237\231","\177\111\207\206\115\159\136\140")]=v16("\43\134\6\21","\63\101\233\112\116\180\47"),[v16("\197\58\254\6","\86\163\91\141\114\152")]=v16("\125\4\98\114\122\113\7\117\96\46","\90\51\107\20\19")},[v16("\169\245\139\235\56","\93\237\144\229\143")]={[v16("\38\254\229\23\0\71\27\255\244\22","\38\117\150\144\121\107")]=v16("\30\179\251\52\38\186\224\51\41\180","\90\77\219\142"),[v16("\239\9\49\56\79\19","\26\134\100\65\89\44\103")]=v16("\210\236\61\33\171\177\202\61\51\165\242\247","\196\145\131\80\67"),[v16("\11\189\50\1\10\231","\136\126\208\102\104\120")]=v16("\80\143\194\79\181\93\51\84\56\173\220\66\161\83\57\84","\49\24\234\174\35\207\50\93"),[v16("\10\243\238\156","\17\108\146\157\232")]=v16("\101\194\25\232\36\162\66\205\84\218\46\190\78","\200\43\163\116\141\79")},[v16("\139\37\40\133\165\248","\131\223\86\93\227\208\148")]={[v16("\208\77\163\184\22\180\237\76\178\185","\213\131\37\214\214\125")]=v16("\21\35\48\177\234\39\37\44\187\238","\129\70\75\69\223"),[v16("\79\198\227\232\127\251","\143\38\171\147\137\28")]=v16("\243\141\180\241\12\163\253\221\146\184\240\23","\180\176\226\217\147\99\131"),[v16("\198\180\27\14\193\182","\103\179\217\79")]=v16("\108\190\18\212\77\204\144\66\190\18\208","\195\42\215\124\181\33\236"),[v16("\11\88\36\42","\152\109\57\87\94\69")]=v16("\204\219\30\170\179\211\64\173\185\228\2\170\176\215","\200\153\183\106\195\222\178\52")},[v16("\16\226\154\57\70\89\57","\58\82\131\232\93\41")]={[v16("\176\95\197\27\86\62\141\94\212\26","\95\227\55\176\117\61")]=v16("\43\118\54\69\160\25\112\42\79\164","\203\120\30\67\43"),[v16("\248\40\93\238\218\229","\185\145\69\45\143")]=v16("\169\16\20\164\211\202\54\20\182\221\137\11","\188\234\127\121\198"),[v16("\45\63\39\138\42\61","\227\88\82\115")]=v16("\101\22\180\166\14\51\112\23\179\169\7","\19\35\127\218\199\98"),[v16("\26\250\25\246","\130\124\155\106")]=v16("\230\196\227\171\172\227\60\134\212\217\255","\223\181\171\150\207\195\150\28")},[v16("\110\40\236\161\13\67\57\232","\105\44\90\131\206")]={[v16("\204\232\167\183\3\63\241\233\182\182","\94\159\128\210\217\104")]=v16("\99\241\19\177\84\126\247\115\84\246","\26\48\153\102\223\63\31\153"),[v16("\11\77\253\242\1\84","\147\98\32\141")]=v16("\59\76\238\200\9\22\98\21\83\226\201\18","\43\120\35\131\170\102\54"),[v16("\65\11\179\191\183\191","\228\52\102\231\214\197\208")]=v16("\51\229\97\207\229\153\89\244\31\243\125","\182\126\128\21\170\138\235\121"),[v16("\141\219\38\242","\102\235\186\85\134\230\115\80")]=v16("\117\13\44\94\121\193\43\67\31\43\31\80\216\35\68\24","\66\55\108\94\63\18\180")},[v16("\63\152\151\62\53\80\26","\57\116\237\229\87\71")]={[v16("\153\185\248\233\124\239\73\163\181\226","\39\202\209\141\135\23\142")]=v16("\204\59\28\4\57\249\241\58\13\5","\152\159\83\105\106\82"),[v16("\136\203\65\243\202\72","\60\225\166\49\146\169")]=v16("\12\17\34\40\14\71\6\19\63\43\2\19","\103\79\126\79\74\97"),[v16("\175\114\231\122\76\21","\122\218\31\179\19\62")]=v16("\150\192\196\205\137\138\76\182\216\215\192\199","\37\211\182\173\161\169\193"),[v16("\241\59\94\205","\217\151\90\45\185\72\27")]=v16("\230\114\226\0\81\218\60\208\19\64\198","\54\163\28\135\114")},[v16("\3\218\84\141\93\119\33\213","\31\72\187\61\226\46")]={[v16("\240\14\86\220\76\127\42\202\2\76","\68\163\102\35\178\39\30")]=v16("\141\120\207\201\8\180\141\24\186\127","\113\222\16\186\167\99\213\227"),[v16("\39\3\235\247\45\26","\150\78\110\155")]=v16("\166\202\42\227\171\94\150\77\149\196\36\245","\32\229\165\71\129\196\126\223"),[v16("\214\132\240\136\147\218","\181\163\233\164\225\225")]=v16("\99\131\49\116\91\156\63\97\85","\23\48\235\94"),[v16("\122\219\203\73","\178\28\186\184\61\55\83")]=v16("\247\216\87\46\247\3\240\132\239\75\61\225\26","\149\164\173\39\92\146\110")},[v16("\217\38\30\26\23\25\242","\123\147\71\112\127\122")]={[v16("\255\197\151\127\77\205\195\139\117\73","\38\172\173\226\17")]=v16("\126\25\57\225\70\16\34\230\73\30","\143\45\113\76"),[v16("\177\181\12\61\187\172","\92\216\216\124")]=v16("\120\61\161\66\242\27\27\161\80\252\88\38","\157\59\82\204\32"),[v16("\45\51\215\243\251\229","\209\88\94\131\154\137\138\179")]=v16("\12\164\201\115\16\99\19\46\41\178\208","\66\72\193\164\28\126\67\81"),[v16("\225\45\187\76","\22\135\76\200\56\70")]=v16("\190\39\247\54\89\161\185\56\234\43\74","\129\237\80\152\68\61")},[v16("\99\169\0\250\8\13","\56\49\200\100\147\124\119")]={[v16("\255\54\170\254\199\63\177\249\200\49","\144\172\94\223")]=v16("\23\7\183\73\47\14\172\78\32\0","\39\68\111\194"),[v16("\223\171\247\198\122\163","\215\182\198\135\167\25")]=v16("\174\70\231\74\130\9\195\69\157\72\233\92","\40\237\41\138"),[v16("\210\121\206\241\88\200","\42\167\20\154\152")]=v16("\105\255\174\67\124\40\94\231\226\96\125\32\89\234\167\80","\65\42\158\194\34\17"),[v16("\28\38\65\24","\142\122\71\50\108\77\141\123")]=v16("\38\163\230\25\49\28\172\191\58\55\20\177\235","\91\117\194\159\120")},[v16("\46\8\44\20\48\226","\68\122\125\94\120\85\145")]={[v16("\36\20\218\80\195\216\180\30\24\192","\218\119\124\175\62\168\185")]=v16("\150\248\93\202\174\241\70\205\161\255","\164\197\144\40"),[v16("\138\253\186\138\222\162","\214\227\144\202\235\189")]=v16("\206\170\138\121\31\243\122\49\253\164\132\111","\92\141\197\231\27\112\211\51"),[v16("\243\242\190\170\195\233","\177\134\159\234\195")]=v16("\158\234\51\161\196\180\255\38\224\235\177\234\44\180\204\175","\169\221\139\95\192"),[v16("\216\138\108\43","\70\190\235\31\95\66")]=v16("\137\227\3\231\239\179\236\90\196\233\187\241\14","\133\218\130\122\134")},[v16("\30\234\239\201\221","\88\92\159\131\164\188\195")]={[v16("\179\38\170\69\220\234\211\137\42\176","\189\224\78\223\43\183\139")]=v16("\29\244\159\24\202\47\242\131\18\206","\161\78\156\234\118"),[v16("\174\186\217\221\164\163","\188\199\215\169")]=v16("\223\6\82\121\231\188\32\82\107\233\255\29","\136\156\105\63\27"),[v16("\14\129\77\61\9\131","\84\123\236\25")]=v16("\213\133\175\5\171\172\176\191\184\22\188","\213\144\235\202\119\204"),[v16("\37\25\205\62","\45\67\120\190\74\72\67")]=v16("\19\35\244\164\243\129\224\169\2\46\236\182\237","\137\64\66\141\197\153\232\142")},[v16("\48\216\39\168\154\12\222","\232\99\176\66\198")]={[v16("\223\41\61\8\112\140\247\37\232\46","\76\140\65\72\102\27\237\153")]=v16("\121\210\3\220\220\0\176\67\222\25","\222\42\186\118\178\183\97"),[v16("\84\225\84\139\94\248","\234\61\140\36")]=v16("\2\210\183\112\0\97\244\183\98\14\34\201","\111\65\189\218\18"),[v16("\86\70\47\60\25\83","\207\35\43\123\85\107\60")]=v16("\95\167\165\237\120\48\137\161\228\119\127\164","\25\16\202\192\138"),[v16("\251\202\190\246","\148\157\171\205\130\201")]=v16("\13\209\115\40\197\255\53\209\52\2\208\228\46\213\52\11\208\250\47","\150\67\180\20\73\177")},[v16("\187\29\29\72\153\12\21","\45\237\120\122")]={[v16("\228\224\183\34\220\233\172\37\211\231","\76\183\136\194")]=v16("\73\238\240\54\91\78\26\115\226\234","\116\26\134\133\88\48\47"),[v16("\23\204\176\229\190\102","\18\126\161\192\132\221")]=v16("\123\58\175\3\89\81\104\136\13\69\75\104\143\16\66\94\43\165","\54\63\72\206\100"),[v16("\221\84\113\115\247\116","\27\168\57\37\26\133")]=v16("\10\191\117\172\210\41\234\79\171\214\57\190\121\186\151\30\162\115\188","\183\77\202\28\200"),[v16("\17\50\154\28","\104\119\83\233")]=v16("\199\253\41\56\76\254\237\103\9\74\254\247\50\42\66","\35\149\152\71\66")},[v16("\45\233\82\185\53\23","\90\121\136\34\208")]={[v16("\244\6\64\16\204\15\91\23\195\1","\126\167\110\53")]=v16("\14\24\59\246\215\62\51\25\42\247","\95\93\112\78\152\188"),[v16("\200\248\149\20\231\170","\178\161\149\229\117\132\222")]=v16("\171\212\208\174\174\86\143\46\152\218\222\184","\67\232\187\189\204\193\118\198"),[v16("\158\35\129\41\41\13","\143\235\78\213\64\91\98")]=v16("\171\65\138\232\124\246\190\64\141\231\117","\214\237\40\228\137\16"),[v16("\131\226\252\205","\198\229\131\143\185\99")]=v16("\115\158\169\101\84\204\155\100\94\158\172\51\112\152\188\114\82\135","\19\49\236\200")},[v16("\213\54\251\178","\218\158\87\150\215\132")]={[v16("\200\22\204\236\61\35\195\242\26\214","\173\155\126\185\130\86\66")]=v16("\214\174\175\201\131\237\235\175\190\200","\140\133\198\218\167\232"),[v16("\188\35\164\124\135\161","\228\213\78\212\29")]=v16("\164\67\187\7\228\199\101\187\21\234\132\88","\139\231\44\214\101"),[v16("\204\226\50\87\2\190","\118\185\143\102\62\112\209\81")]=v16("\110\127\58\238\229\52\8\44\93\115\34","\88\60\16\73\134\197\117\124"),[v16("\86\235\235\220","\33\48\138\152\168")]=v16("\70\3\34\69\205\50\50\50\53\71\192\36\102\23\36\88\206\57","\87\18\118\80\49\161")},[v16("\103\23\212\167\240\122\27\221\165\164\77","\208\44\126\186\192")]={[v16("\196\18\177\200\31\253\199\71\243\21","\46\151\122\196\166\116\156\169")]=v16("\214\229\83\20\240\228\227\79\30\244","\155\133\141\38\122"),[v16("\44\39\188\64\76\107","\197\69\74\204\33\47\31")]=v16("\211\64\87\133\255\15\115\138\224\78\89\147","\231\144\47\58"),[v16("\167\213\238\124\10\50","\89\210\184\186\21\120\93\175")]=v16("\152\93\122\208\107\52\176\95\60\229\108\52\178\91","\90\209\51\28\181\25"),[v16("\214\122\68\250","\223\176\27\55\142")]=v16("\13\181\200\176\54\181\207\185\100\137\207\178\33","\213\68\219\174")},[v16("\49\225\42\236\37","\31\107\128\67\135\74\165\95")]={[v16("\235\224\233\67\74\176\214\225\248\66","\209\184\136\156\45\33")]=v16("\52\192\96\6\179\6\198\124\12\183","\216\103\168\21\104"),[v16("\113\160\83\165\123\185","\196\24\205\35")]=v16("\13\132\238\4\33\203\202\11\62\138\224\18","\102\78\235\131"),[v16("\239\35\0\77\85\54","\84\154\78\84\36\39\89\215")]=v16("\206\224\95\83\10\238\224\95\24\47\252\234\87\81","\101\157\129\54\56"),[v16("\27\168\153\191","\25\125\201\234\203\67")]=v16("\74\245\17\8\27\52\18\112\180\58\12\6\50","\115\25\148\120\99\116\71")},[v16("\47\53\176\40\77\9\57","\33\108\93\217\68")]={[v16("\232\67\180\163\208\74\175\164\223\68","\205\187\43\193")]=v16("\205\122\16\209\245\115\11\214\250\125","\191\158\18\101"),[v16("\204\206\151\182\172\209","\207\165\163\231\215")]=v16("\229\246\244\84\43\48\239\244\233\87\39\100","\16\166\153\153\54\68"),[v16("\199\190\244\79\38\46","\153\178\211\160\38\84\65")]=v16("\161\4\84\40\135\5\78\57\131\31\95\107\176\10\64\36\144","\75\226\107\58"),[v16("\94\223\2\110","\173\56\190\113\26\113\162")]=v16("\249\203\57\13\251\206\205\62\69\213\199\209\58","\151\171\190\77\101")},[v16("\226\32\243\188\184\95\7\196\44\243","\107\165\79\152\201\152\29")]={[v16("\100\70\253\197\95\126\89\71\236\196","\31\55\46\136\171\52")]=v16("\226\32\201\250\218\41\210\253\213\39","\148\177\72\188"),[v16("\175\187\71\210\165\162","\179\198\214\55")]=v16("\211\3\127\116\74\147\217\1\98\119\70\199","\179\144\108\18\22\37"),[v16("\211\174\47\128\221\201","\175\166\195\123\233")]="",[v16("\233\195\78\93","\144\143\162\61\41")]=v16("\242\214\19\74\125\140\38\160\216\28\93\119\143\50\237\214\21\81","\83\128\179\125\48\18\231")},[v16("\118\182\244\210\74\27","\126\61\215\147\189\39")]={[v16("\75\247\8\75\115\254\19\76\124\240","\37\24\159\125")]=v16("\233\174\96\76\209\167\123\75\222\169","\34\186\198\21"),[v16("\241\5\213\92\193\236","\162\152\104\165\61")]=v16("\238\32\191\127\127\165\228\34\162\124\115\241","\133\173\79\210\29\16"),[v16("\152\113\217\34\159\115","\75\237\28\141")]=v16("\248\70\194\176\34\18\228\161\236\74\194\178\39","\129\188\63\172\209\79\123\135"),[v16("\70\229\245\217","\173\32\132\134")]=v16("\102\30\9\251\238\21\194\67\30\72\206\186\37\204\77\16","\173\46\123\104\143\206\81")},[v16("\128\18\50\154\74","\97\212\125\66\234\37\227")]={[v16("\185\235\163\59\21\139\237\191\49\17","\126\234\131\214\85")]=v16("\183\221\92\84\68\133\219\64\94\64","\47\228\181\41\58"),[v16("\175\241\201\58\0\36","\127\198\156\185\91\99\80")]=v16("\214\21\193\242\168\75\16\211\229\27\207\228","\190\149\122\172\144\199\107\89"),[v16("\39\8\197\247\236\61","\158\82\101\145\158")]=v16("\64\241\21\19\86\48\214\11\2","\36\16\158\98\118"),[v16("\198\23\208\239","\133\160\118\163\155\56\136\71")]=v16("\220\183\98\230\191\28\176\182\132\125\243\165\23","\213\150\194\17\146\214\127")},[v16("\57\187\171\216\74\189\226\5\14\185\161\198","\86\123\201\196\180\38\196\194")]={[v16("\196\224\204\161\252\233\215\166\243\231","\207\151\136\185")]=v16("\155\139\61\140\127\121\127\161\135\39","\17\200\227\72\226\20\24"),[v16("\185\76\11\214\202\229","\159\208\33\123\183\169\145\143")]=v16("\209\85\53\52\253\26\17\59\226\91\59\34","\86\146\58\88"),[v16("\77\210\222\201\188\230","\154\56\191\138\160\206\137\86")]=v16("\165\81\250\140\101\53\133\205\143\25\222\158\125\52\142\194","\172\230\57\149\231\28\90\225"),[v16("\4\171\149\198","\187\98\202\230\178\72")]=v16("\3\244\182\49\89\52\245\165\61\79\53\228\171","\42\65\129\196\80")}};v40.toOrder=function(v162) return {v162[v16("\49\66\72\212\28\6\12\231\6\69","\142\98\42\61\186\119\103\98")],v162[v16("\62\190\17\28","\104\88\223\98")],v162[v16("\81\250\214\199\16\226","\141\36\151\130\174\98")],v162[v16("\141\119\210\12\135\110","\109\228\26\162")]};end;function ucwords(v163) v163=v163:trim():split(" ");local v164;for v251,v252 in ipairs(v163) do v252=v252:sub(1,1):upper()   .. v252:sub(2) ;v164=(v164 and (v164   .. " "   .. v252)) or v252 ;end return v164;end for v165,v166 in pairs(v40.vocations) do v40.vocations[ucwords(v165)]=v166;end v40.setupMacro=macro(1,function() return (v40.actualVocation and v40.setupMacro.setOff()) or g_game.look(player) ;end);v40.isExhausted=function(v168) return (type(v168)==v16("\80\240\240\122\229\244","\134\62\133\157\24\128")) and (v168>os.time()) ;end;v40.macroCombo=macro(1,v16("\36\170\23\219\32","\182\103\197\122\185\79\209"),function() for v253=1,5 do if modules.corelib.g_keyboard.isKeyPressed("F"   .. v253 ) then return;end end if ( not v40.actualVocation or  not g_game.isAttacking()) then return;end local v169=v40.actualCombo;for v254,v255 in ipairs(v40.toOrder(v169)) do if  not v40.isExhausted(v255) then say(v255);end end end,tab);onTalk(function(v170,v171,v172,v173) if  not v40.actualVocation then return;end if (v170~=player:getName()) then return;end if (v172~=44) then return;end v173=v173:lower();local v174=v40.actualCombo;for v256,v257 in pairs(v174) do local v258=v257:lower():trim();if (v258==v173) then storage.exhaustCombo[v258]=os.time() + v40.times[v256] ;break;end end end);vocationVerify=onTextMessage(function(v175,v176) v176=v176:lower();if v176:find(v16("\234\136\244\55\19\77\246\199\248\120\21\90\224\130\237\113","\40\147\231\129\23\96")) then local v292=[[you see yourself. you are ([\w ]*).]];local v293=regexMatch(v176,v292);if ( #v293>0) then local v320=v293[1][2]:split(" ");local v321;for v329,v330 in ipairs(v320) do if ((v330==v16("\103\253\142\74\169\162","\188\21\152\236\37\219\204")) or (v330==v16("\85\229\35\30\65","\108\32\137\87"))) then break;end v321=(v321 and (v321   .. " "   .. v330)) or v330 ;end v40.actualVocation=ucwords(v321);v40.actualCombo=v40.vocations[v40.actualVocation];talkPrivate(player:getName(),v16("\137\231\13\164\32\185\111\92\172\225\14\175\43\246\7\25","\57\202\136\96\198\79\153\43")   .. v40.actualVocation   .. "." );vocationVerify.remove();end end end);function doAttack(v177) if ( not v177 or  not g_game.getLocalPlayer()) then return;end if ( not g_game.canPerformGameAction() or (v177:getId()==g_game.getLocalPlayer():getId())) then return;end if (g_game.getFollowingCreature() and (g_game.getFollowingCreature():getId()==v177:getId())) then g_game.cancelFollow();end if (g_game.getAttackingCreature() and (g_game.getAttackingCreature():getId()==v177:getId())) then g_game.cancelAttack();local v294=OutputMessage.create();v294:addU8(190);v294:addU32(v177:getId());g_game.getProtocolGame():send(v294);else g_game.attack(v177);local v295=OutputMessage.create();v295:addU8(244);v295:addU32(v177:getId());g_game.getProtocolGame():send(v295);end end AtkTarget={[v16("\191\34\184\160\136\179\209\175","\152\203\67\202\199\237\199")]=nil,[v16("\246\66\179\27\43\116\107\225\255\87\148\6\18\112","\134\154\35\192\111\127\21\25")]=0,[v16("\149\3\58\57\1\245\157\25\39\37\20\237\139\14\38\37\20\251\150\1\54\57\11\251\148\10\58","\178\216\70\105\106\64")]={v16("\38\36\111\182\202\212\218\192\48\37\118\239\137\192\199\133\127\34\110\182\198\219\148\131\45\46\123\226\220\199\209\147\113","\224\95\75\26\150\169\181\180"),v16("\27\213\220\45\4\185\101\10\200\152\33\87\191\121\75\223\213\104\71\190\127\10\206\205\58\69\191\56","\22\107\186\184\72\36\204")},[v16("\235\188\55\90\45\230\174\48","\110\135\221\68\46")]=0,[v16("\239\55\31\255\252\182\56\226\37\24","\91\131\86\108\139\174\211")]=0};macro(1,function() local v178=g_game.getAttackingCreature();if v178 then if ( not AtkTarget.targetId or (v178:getId()~=AtkTarget.targetId)) then AtkTarget.targetId=v178:getId();end end end);macro(1,v16("\218\63\179\35\92\233\44\189\3","\61\155\75\216\119"),function() if (isInPz()) then return;end local v179=g_game.getAttackingCreature();if  not AtkTarget.targetId then return;end if (g_game.isAttacking()) then return;end if (AtkTarget.lastCast>=now) then return;end for v259,v260 in pairs(getSpectators()) do if (v260:isPlayer()) then if (v260:getId()==AtkTarget.targetId) then doAttack(v260);AtkTarget.lastCast=now + 20 ;end end end end);onKeyDown(function(v180) if (v180==v16("\33\184\177\61\72\12","\189\100\203\210\92\56\105")) then local v296=g_game.getAttackingCreature();if ( not v296 or (v296:getId()==AtkTarget.targetId)) then g_game.cancelAttackAndFollow();AtkTarget.targetId=nil;end end end);onTextMessage(function(v181,v182) v182=v182:lower();if (AtkTarget.lastRecast>=now) then return;end for v261,v262 in ipairs(AtkTarget.MESSAGE_NOT_SHOOTING_SKILLS) do if (v182:find(v262) and g_game.isAttacking() and AtkTarget.targetId) then g_game.cancelAttack();AtkTarget.lastRecast=now + 20 ;end end end);UI.Separator();macro(1,v16("\2\72\238\60\38\82\189\123\127\20\189","\72\79\49\157"),function() if (hppercent()<=30) then say(v16("\133\169\34\168\129\179\113\184\141\182\52\178\155\181","\220\232\208\81"));end end);UI.Separator();setDefaultTab(v16("\193\177\234\60\63","\193\149\222\133\80\76\58"));macro(10000,v16("\228\72\73\212\220\29\110\222\202","\178\166\61\47"),function() if  not hasPartyBuff() then local v297={v16("\241\95\251\110\195\61\254\10\233\111\216\63","\94\155\42\136\26\170"),v16("\134\48\34\172\196\50\39\187\141\47\51\185\133\43\47\186\138","\213\228\95\70"),v16("\31\183\214\141\122\43\175\199\196\81\63\168\203\139\121\106\158\204\129\101\45\162","\23\74\219\162\228"),v16("\49\231\77\174\50\42\238\79\161\123\56\243\84\174","\91\89\134\38\207"),v16("\79\231\198\44\28\219\50\4\224\199\118\24\209\48\69","\71\36\142\168\86\115\176")};local v298=false;for v311,v312 in ipairs(v297) do say(v312);if hasPartyBuff() then v298=true;break;end end if  not v298 then say(v16("\202\173\102\182\14\191\66\76\159\177\125\168\6\172\22\92\207","\41\191\193\18\223\99\222\54"));end end end);UI.Separator();macro(500,"",nil,function() if  not hasHaste() then say(v16("\184\51\215\47\184\235\53\215\47\175\175\102\135\106\234","\202\203\70\167\74"));end end);macro(100,function() for v263,v264 in ipairs(getSpectators()) do if v264:getName():lower() then if (v264:getShield()==1) then g_game.partyJoin(v264:getId());return;end end end end);macro(50,function() if  not modules.corelib.g_keyboard.areKeysPressed(v16("\10\80","\17\76\97\188\83")) then if (hppercent()<=68) then usewith(3587,player);delay(100);end end end);macro(50,function() if  not modules.corelib.g_keyboard.areKeysPressed(v16("\163\118","\195\229\71\185\87\80\227\43")) then if (hasManaShield() and (player:getMana()<=20)) then usewith(3587,player);delay(100);end end end);UI.Separator();local v47=3062;local v48=30;macro(200,v16("\208\249\4\66\238\160\206\5\70\230\246\249\18","\143\128\156\96\48"),function() if (hppercent()<=v48) then usewith(v47,player);end end);UI.Separator();UI.Separator();local v49=v16("\158\128","\119\216\177\144\114");local v50=2;local v51=0;local v52=3003;local v53=v16("\239\120","\34\169\73\153");local v54=v16("\140\189","\235\202\140\107");local v55=v16("\42\37","\165\108\20\84\200\137\71\151");local v56="";local v57={v16("\34\236\123\200\45\231\123\200\43\229","\232\26\212\75"),v16("\102\27\32\188\183\110\30\37\168\166\103","\151\87\41\18\136"),v16("\10\253\155\134\190\2\248\159\144\166","\158\59\207\170\176"),v16("\30\12\97\25\204\22\9\106\9\213","\236\47\62\83\41"),v16("\171\248\119\110\234\219\172\241\96\99","\226\154\201\64\91\202"),v16("\144\24\69\74\10\229\150\24\93\65","\220\161\41\125\120\42"),v16("\237\32\248\92\252\40\247\95\252\32\240","\110\220\17\192"),v16("\37\43\102\74\171\110\166\254\52\40\100","\199\20\25\84\122\139\87\145"),v16("\22\91\137\247\91\178\20\94\157\246","\138\39\105\189\206\123"),v16("\78\85\221\116\179\161\156\168\95\94","\159\127\103\233\77\147\153\175"),v16("\86\162\189\248\0\156\81\165\164\243","\171\103\144\132\202\32"),v16("\65\125\176\94\80\120\191\88\80\126\185","\108\112\79\137"),v16("\110\147\44\126\237\80\185\101\111\130\45","\85\95\162\20\72\205\97\137"),v16("\166\172\125\141\77\161\148\163\189\115","\173\151\157\74\188\109\152"),v16("\117\89\111\142\156\5\133\163\119\72\105\141","\147\68\104\88\189\188\52\181"),v16("\75\217\211\134\90\217\219\128\74\200\211","\176\122\232\235"),v16("\210\34\104\15\186\217\53\107\28","\142\224\21\90\47"),v16("\37\129\113\22\245\223\210\52\133\115","\229\20\180\71\54\196\235"),v16("\120\39\150\163\164\248\213\105\47\149","\224\73\30\161\131\149\202"),v16("\163\189\163\16\167\181\177\1\165","\48\145\133\145"),v16("\8\20\231\174\135\124\26\29\230","\76\58\44\213\142\177"),v16("\153\115\64\109\44\147\100\67\126","\24\171\68\114\77"),v16("\189\74\2\18\211\134\68\252\188","\205\143\125\48\50\231\190\100"),v16("\147\254\67\69\176\183\138\226\144\243","\194\161\199\116\101\129\131\191"),v16("\190\125\158\232\166\246\186\100\153\251","\194\140\68\168\200\151"),v16("\16\162\133\101\162\20\187\132\118","\149\34\155\181\69"),v16("\82\173\133\163\67\172\132\173\84\189\140","\154\99\157\181"),v16("\220\95\188\249\172\220\94\190\247\172\220\95","\140\237\111\140\192"),v16("\95\72\61\73\81\77\61\73\82","\120\102\121\29"),v16("\244\179\249\105\253\177\249\106\248","\91\204\131\217"),v16("\153\170\21\134\226\143\190\159\171","\158\174\159\53\180\211\189"),v16("\10\173\173\143\38\231\18\172\185","\213\50\157\141\189\23"),v16("\166\115\196\242\32\245\190\119\208","\196\158\70\228\192\18"),v16("\27\12\69\14\139\31\11\81\31\141","\185\42\63\113\46"),v16("\141\140\119\121\66\140\139\97\104\74","\123\180\189\65\89"),v16("\148\216\168\164\216\147\213\168\164\216\147","\233\162\236\144\132"),v16("\229\145\175\90\234\163\6\242\147","\63\210\164\158\122\217\150"),v16("\100\158\167\172\26\173\106\139\160","\152\83\171\150\140\41"),v16("\213\179\208\115\135\78\80\194\179","\104\226\133\227\83\180\123"),v16("\84\93\112\16\80\94\123\16\84","\48\99\107\67"),v16("\137\240\42\144\127\46\137\230\42","\27\190\198\29\176\77"),v16("\183\28\169\116\251\24\188\11\170","\46\143\43\157\84\201"),v16("\15\32\4\130\13\69\155\23\47","\168\55\24\54\162\63\115"),v16("\70\168\116\209\146\155\68\174\96\209\130","\174\119\154\64\224\178"),v16("\115\42\144\59\83\254\78\164\123\46","\132\74\30\165\27\101\199\122"),v16("\118\179\170\231\241\236\224\111\190","\212\79\135\159\199\199\213"),v16("\40\240\231\21\28\128\73\43\224\228\23","\120\25\192\213\39\60\183"),v16("\73\16\109\26\88\23\110\26\88\25","\40\120\32\95"),v16("\107\251\107\40\239\72\106\252\121\35","\127\90\203\89\26\207"),v16("\140\101\253\153\73\170\141\98\239\154\89","\157\189\85\207\171\105"),v16("\159\243\140\245\84\151\248\152\228\82","\99\166\193\184\213"),v16("\143\227\209\251\91\222\135\247\209\234","\234\182\215\224\219\108"),v16("\152\217\233\117\151\214\232\117\145\208","\85\160\225\219"),v16("\4\93\209\137\97\138\31\28\84\210","\43\60\101\227\169\86\188"),v16("\40\144\131\255\13\153\237\119\33\153","\87\16\168\177\223\58\172\217"),v16("\108\154\0\157\108\96\159\25\140\106","\91\84\173\57\189"),v16("\72\238\85\188\247\133\65\249\93\172","\182\112\217\108\156\192"),v16("\251\89\26\183\203\252\81\25\175\218\250","\235\202\104\40\143"),v16("\84\210\67\249\91\216\66\249\92\219","\217\109\235\123"),v16("\118\217\43\15\48\136\154\239\103\222","\221\71\233\30\54\16\176\173"),v16("\101\172\8\236\116\164\7\231\116\168","\223\84\156\62"),v16("\135\172\180\142\247\99\143\164\162\138","\91\182\156\130\189\215"),v16("\47\35\248\13\62\43\245\13\62\39","\53\30\19\204"),v16("\168\176\36\211\231\161\185\40\196\240","\199\153\128\16\228"),v16("\128\122\182\64\231\136\122\188\89\240","\199\177\74\133\121"),v16("\235\157\233\190\101\145\123\248\152\237","\74\216\169\220\158\87\166"),v16("\187\116\65\108\8\190\113\83\125\10","\58\136\67\115\76"),v16("\162\243\137\25\215\119\243\29\160\250","\61\145\202\184\57\229\64\203"),v16("\15\7\208\7\14\5\221\7\13\2","\39\60\50\233"),v16("\78\102\247\108\208\112\225\227\75\99","\195\122\83\195\76\226\72\210"),v16("\176\128\106\190\115\188\130\123\175\113","\65\132\180\91\158"),v16("\81\47\137\110\87\42\128\110\84\44","\78\101\28\177"),v16("\113\225\185\17\119\224\180\17\116\228","\49\69\212\128"),v16("\67\90\137\178\179\65\90\144\163\177","\129\119\108\176\146"),v16("\104\151\85\141\119\91\69\124\158\87","\124\92\175\103\173\69\110"),v16("\149\97\82\119\147\108\90\119\144\104","\87\161\88\99"),v16("\71\175\191\140\229\132\123\82\168\191","\67\114\153\143\172\215\176"),v16("\239\240\186\93\254\247\183\95\254\243\190","\110\222\194\142"),v16("\70\139\79\250\18\244\78\136\91\248\3","\193\119\185\123\201\50"),v16("\38\90\172\126\79\47\72\36\72\168\118","\127\23\104\153\70\111\25"),v16("\88\85\243\247\107\122\224\224\73\86\247","\211\105\103\198\207\75\76\215"),v16("\159\245\232\188\62\91\234\225\142\246\224","\214\174\199\208\143\30\108\218"),v16("\64\214\83\250\229\1\136\30\81\213\90","\41\113\228\107\202\197\54\184"),v16("\34\222\104\28\40\217\107\28\45","\60\26\237\88"),v16("\128\120\45\166\252\140\120\52\176","\206\184\74\20\134"),v16("\96\180\190\241\161\30\106\140\110","\172\88\132\142\209\147\42\88"),v16("\223\218\156\77\100\161\236\199\221","\222\231\234\172\109\86\149"),v16("\180\190\144\88\184\190\146\88\186","\120\141\143\160"),v16("\17\252\226\10\0\251\230\0\0\251","\50\32\204\214"),v16("\215\23\97\41\243\71\214\19\117\46","\113\230\39\85\25\211"),v16("\143\235\80\184\103\157\253\30\158\236","\43\190\219\102\136\71\171\203"),v16("\115\46\105\12\98\40\102\14\98\41","\57\66\30\80"),v16("\120\136\247\68\196\111\160\213\105\143","\228\73\184\192\117\228\89\148"),v16("\158\217\37\69\143\223\44\65\143\222","\116\175\233\21"),v16("\175\168\231\23\155\100\103\167\184\233","\95\158\152\222\38\187\81"),v16("\169\237\108\227\227\158\168\234\117\229","\168\152\221\85\210\195"),v16("\250\142\172\214\235\136\167\213\235\137","\231\203\190\149"),v16("\156\109\186\167\252\163\72\152\125\180","\123\173\93\131\145\220\149"),v16("\71\149\189\120\52\175\69\150\173\118","\153\118\164\141\65\20"),v16("\191\99\214\187\183\86\191\103\198\181","\96\142\82\230\130\151"),v16("\30\225\31\27\164\187\22\233\15\21","\142\47\208\47\34\132"),v16("\167\239\86\83\27\9\174\232\68\85","\60\150\222\100\98\59"),v16("\20\108\7\6\155\239\105\28\124\0","\81\37\92\55\54\187\218"),v16("\87\20\248\119\212\85\4\250","\225\96\36\205\87"),v16("\190\247\18\57\41\26\73\190","\105\137\198\34\25\28\47"),v16("\70\255\17\54\152\64\233\22","\160\113\201\33\22"),v16("\131\8\248\231\240\244\148\13","\205\180\56\204\199\201"),v16("\212\142\104\88\218\135\124\78","\120\227\190\92"),v16("\107\11\71\59\123\9\153\180","\130\93\60\127\27\67\60\185"),v16("\30\101\96\14\184\22\61\31","\29\40\82\88\46\128\35"),v16("\109\18\128\93\88\239\123\18","\216\91\37\180\125\97"),v16("\115\33\72\131\14\114\54\68","\55\69\22\124\163"),v16("\46\129\5\168\134\37\16\172","\148\24\179\60\136\191\17\48"),v16("\229\124\169\224\167\231\124\185\248","\150\210\74\153\192"),v16("\180\153\111\202\36\47\226\163\145","\212\131\168\88\234\21\26"),v16("\18\36\220\204\105\114\29\52\216\220","\71\37\20\233\236\88"),v16("\154\16\224\86\17\185\26\28\148","\60\173\38\208\118\32\140\44"),v16("\22\99\182\147\113\154\23\114\176\131","\175\33\82\129\179\64"),v16("\185\191\101\143\109\231\182\175\97\158","\210\142\143\80\175\92"),v16("\239\189\160\134\225\177\179\145","\166\217\137\147"),v16("\181\245\35\230\160\19\177\227\37","\38\131\195\18\198\145"),v16("\5\128\105\171\105\1\10\150\109","\52\51\182\90\139\88"),v16("\161\236\137\167\18\174\238\144\176","\35\150\217\176\135"),v16("\174\3\82\76\38\26\37\185\7","\22\153\48\107\108\23\35"),v16("\89\210\238\90\46\38\24\169\89","\137\110\229\219\122\31\21\33"),v16("\77\238\106\59\103\30\125\62\77","\30\122\221\88\27\86\43\68"),v16("\96\112\188\198\108\126\191\198\105\120","\230\88\72\139"),v16("\37\236\69\91\87\88\11\50\229\70","\56\18\212\118\123\99\104"),v16("\73\177\168\147\140\135\71\169\169\131","\190\126\137\152\179\191"),v16("\113\84\36\139\254\17\125\66\35\155","\32\72\98\18\171\202"),v16("\93\220\103\52\164\93\218\114\37\167","\151\100\232\82\20"),v16("\46\137\160\88\63\138\175\93\63\136\166","\104\31\185\150"),v16("\132\238\161\183\191\153\176\128\139","\160\188\217\147\151\135\172\128"),v16("\94\141\64\167\122\158\88\136\80\167","\169\111\189\112\144\90"),v16("\158\213\114\237\235\212\94\194\154","\226\173\227\69\205\223\224\105"),v16("\9\108\118\11\143\78\14\109\98\10\159","\123\56\94\66\59\175"),v16("\171\17\38\180\90\171\212\163\3\34\177","\225\154\35\19\129\122\158"),v16("\11\82\189\4\181\177\128\103\26\81\187","\84\58\96\139\55\149\135\176"),v16("\66\109\244\86\14\153\106\70\127\242\80","\94\115\95\195\96\46\175"),v16("\18\25\105\104\110\123\209\176\3\26\111","\128\35\43\95\93\78\77\231"),v16("\245\79\96\98\87\40\254\243\93\103\100","\201\196\125\86\84\119\30"),v16("\146\188\83\233\131\184\92\230\131\191\84","\223\163\142\100"),v16("\211\68\149\228\248\213\71\144\241\233\210","\216\226\118\163\209"),v16("\239\162\77\84\23\39\108\236\176\74\81","\95\222\144\123\97\55\16"),v16("\72\214\238\20\163\78\215\238\3\178\73","\131\121\228\218\35"),v16("\136\130\113\80\57\76\136\136\98\80\41","\123\185\176\66\97\25"),v16("\153\93\75\2\85\121\1\102\136\94\73","\81\168\111\121\49\117\79\56"),v16("\150\88\182\239\135\93\181\229\135\91\181","\214\167\106\133"),v16("\120\106\25\26\116\41\129\113\120\29\31","\185\73\88\44\47\84\31"),v16("\217\133\78\248\147\169\223\128\90\241\131","\159\232\183\122\192\179"),v16("\117\96\252\117\100\100\254\112\100\99\248","\65\68\82\200"),v16("\116\2\33\117\143\153\43\117\16\35\112","\30\69\48\18\64\175\175"),v16("\161\126\75\189\123\166\126\70\172\106\160","\91\144\76\127\140"),v16("\185\95\16\97\133\234\132\144\183","\176\128\104\38\65\179\218\181"),v16("\129\150\147\64\144\157\151\67\144\157","\117\176\164\162"),v16("\213\144\84\165\154\32\209\148\69\161\138","\25\228\162\101\144\186"),v16("\25\103\237\91\178\188\17\98\249\95\162","\132\40\86\217\110\146"),v16("\47\154\115\233\231\43\165\10\62\146","\62\30\171\71\220\199\19\156"),v16("\17\23\253\99\29\145\126\27\0\28","\45\32\37\204\86\61\169\79"),v16("\4\7\84\234\245\36\4\2\69\237\229","\28\53\53\101\220\213"),v16("\92\14\93\21\26\249\0\139\77\13\88","\191\109\60\104\33\58\193\48"),v16("\214\133\65\178\199\143\74\180\199\142","\135\231\183\120"),v16("\183\88\21\177\117\66\251\181\74\29\180","\201\134\106\44\132\85\122"),v16("\103\94\33\104\65\84\157\113\118\93\39","\67\86\108\23\95\97\108\168"),v16("\245\106\26\83\228\124\129\9\228\96","\48\196\88\44\106\196\68\181"),v16("\219\135\138\99\213\252\251\108\213","\76\226\191\188\67\224\196\194"),v16("\128\127\84\176\168\128\121\71\167","\157\185\72\103\144"),v16("\0\234\218\58\254\225\8\243\221","\209\57\211\234\26\200"),v16("\80\158\246\210\16\132\81\157\230\214","\178\97\174\198\225\48"),v16("\150\14\81\177\46\178\94\143\1","\111\175\54\100\145\24\134"),v16("\21\65\112\85\18\73\119\68\3\78","\117\35\121\64"),v16("\140\236\182\150\114\27\141\233\174\131","\47\189\221\142\182\67"),v16("\113\237\115\139\25\250\120\127\96\234","\73\64\223\71\171\40\201\64"),v16("\91\223\149\25\241\46\93\223\132\12","\29\106\237\164\57\192"),v16("\224\244\183\250\132\129\247\160\241\241","\146\209\196\135\218\181\178\192"),v16("\122\103\195\64\3\240\127\112\214","\199\77\80\227\113\48"),v16("\125\107\30\156\121\103\8\141\127","\173\74\95\62"),v16("\159\64\28\103\152\94\239\134\76","\220\166\121\60\86\171\103"),v16("\191\85\110\240\106\147\75\190\66\106","\122\137\98\93\208\91\170"),v16("\209\185\74\15\132\234\240\159\199\182","\170\231\129\124\47\181\210\201"),v16("\220\235\109\112\91\114\210\238\122\103","\74\235\219\90\80\106"),v16("\27\144\15\123\107\172\35\166\12\148","\146\44\163\59\91\90\148\26"),v16("\35\124\236\193\24\45\122\234\193\30","\41\21\77\216\225"),v16("\66\28\39\5\69\21\37\23\84\26","\37\116\45\18"),v16("\153\174\5\226\250\151\168\4\226\252","\203\175\159\54\194"),v16("\42\150\65\99\26\26\145\42\142\78","\162\27\174\121\91\58\47"),v16("\130\145\74\165\127\136\128\150\77\181\103","\185\179\165\127\149\95"),v16("\8\34\143\163\65\3\53\151","\119\49\21\175\148"),v16("\1\236\66\29\122\16\219\181\15","\149\55\213\118\61\77\41\234"),v16("\75\95\155\134\184\107\248\78\93\94","\123\125\102\170\166\137\89\207"),v16("\27\84\8\125\87\211\253\14\88","\201\46\96\56\93\110\227"),v16("\238\87\190\185\77\152\227\67\182","\161\219\99\142\153\117"),v16("\45\233\244\37\141\36\227\244\51\152","\173\28\209\198\19"),v16("\36\186\225\239\53\180\229\232\53\187","\219\21\140\215"),v16("\25\238\144\244\24\16\234\159\231\0","\56\40\216\166\199"),v16("\119\227\67\124\102\227\77\124\102\227","\79\70\212\117"),v16("\246\65\184\158\185\84\244\69\161\145","\109\199\118\129\166\153"),v16("\96\232\39\166\113\233\38\174\113\230","\150\81\208\23"),v16("\168\147\178\223\185\157\185\222\185\147","\235\153\165\128"),v16("\234\31\241\122\6\126\243\172\251\31","\158\219\41\194\79\38\70\202"),v16("\18\115\125\86\174\142\209\22\101\122","\232\35\69\79\98\142\182"),v16("\45\89\71\189\33\85\76\189\33","\157\25\96\127"),v16("\242\211\161\69\8\101\240\195\173","\81\199\227\149\101\48"),v16("\40\10\172\81\174\210\105\251\37","\219\29\50\155\113\150\230\92"),v16("\134\117\144\59\167\27\27\145\120","\45\177\64\165\27\159\40"),v16("\75\69\89\234\37\75\79\79\253","\18\125\118\111\202"),v16("\6\105\13\186\102\251\148\187\7","\155\48\92\57\154\80\205\167"),v16("\224\154\233\255\161\255\17\249\154","\37\217\173\219\223\152\203"),v16("\88\85\78\110\15\241\174\93\69\72","\150\105\101\127\86\47\200"),v16("\155\161\167\245\158\145\151\178\171","\160\174\146\147\213\167"),v16("\21\176\74\4\85\16\17\164\66","\33\32\132\122\36\108"),v16("\232\66\38\11\45\238\69\43\11\36","\28\217\116\18\43"),v16("\128\15\150\5\135\251\105\146\15","\92\178\55\182\52\176\206"),v16("\75\103\33\85\75\102\41\66\90\98","\117\122\85\17"),v16("\223\182\106\21\245\133\223\175\125","\189\232\143\74\36\198"),v16("\174\250\82\23\151\91\172\251\93\14\128","\106\156\202\106\46\183"),v16("\108\65\47\101\106\108\74\43\99\106\106","\74\93\121\27\83"),v16("\44\238\179\39\61\239\183\42\61\236","\30\29\219\134"),v16("\4\254\78\162\180\14\74\95\5\231\78","\110\53\199\121\154\148\63\120"),v16("\83\74\171\109\25\173\83\74\171\127\14","\156\97\122\159\95\57"),v16("\156\230\140\161\75\83\109\156\229\154\175","\95\174\214\186\152\107\98"),v16("\219\94\36\210\83\151\219\90\32\203\68","\166\233\110\17\235\115"),v16("\42\94\144\147\178\239\46\46\90\132\150","\28\24\110\164\161\146\222"),v16("\9\147\4\117\27\146\5\117\10\131\1","\69\59\163\54"),v16("\226\248\152\27\115\156\229\224\250\138\18","\214\208\200\170\42\83\173"),v16("\140\114\37\224\44\138\118\50\248","\21\185\65\18\192"),v16("\171\5\9\91\248\172\14\29\67","\193\158\54\61\123"),v16("\100\68\120\249\100\69\114\232\117\70","\217\85\113\64"),v16("\29\89\159\128\184\210\179\11\93","\133\43\111\172\160\143\226"),v16("\157\246\3\145\151\153\240\16\132","\160\171\195\48\177"),v16("\135\82\54\124\15\148\254\135\132","\167\179\99\22\77\60\161\207"),v16("\80\42\211\24\29\82\42\217\24\27","\44\97\31\235\56"),v16("\160\92\168\228\160\93\160\240\177\88","\196\145\110\152"),v16("\15\118\190\163\11\118\170\178\14","\146\56\78\158"),v16("\116\130\15\183\9\116\138\15\176","\58\77\187\47\134"),v16("\67\101\241\71\180\122\6\74\82\98","\126\114\85\193\103\133\78\52"),v16("\150\138\107\56\145\141\97\56\147","\24\164\187\82"),v16("\163\138\13\250\177\160\142\8\252\177\168","\145\145\186\60\202"),v16("\183\135\100\83\166\136\99\83\166\133","\100\134\176\83"),v16("\130\153\18\233\243\77\130\149\2\232","\117\179\161\34\221\211"),v16("\27\229\169\134\83\175\243\13\229","\197\45\208\154\166\100\159"),v16("\127\161\213\252\100\120\162\198\232","\83\73\148\230\220"),v16("\101\140\161\160\184\216\100\159\165","\233\83\191\150\128\143"),v16("\161\211\156\50\90\166\208\143\33","\109\151\230\175\18"),v16("\246\169\22\4\215\241\173\1\22","\224\192\154\33\36"),v16("\213\1\75\194\212\4\78\194\215","\226\227\52\120"),v16("\83\185\187\228\29\238\128\249\81","\217\101\139\140\196\42\223\183"),v16("\76\88\253\90\19\75\88\239\72","\36\122\111\207\122"),v16("\90\91\189\248\239\100\90\72\182","\84\108\104\132\216\216"),v16("\157\78\158\24\177\240\16\158\91\144","\34\172\123\166\56\128\196"),v16("\245\252\240\139\27\32\128\71\228\255","\116\196\201\200\171\42\19\181"),v16("\34\215\187\12\70\85\77\54\208","\124\22\230\155\61\117\96"),v16("\145\249\166\186\170\191\167\133\253","\149\165\203\134\139\158\141"),v16("\103\254\0\119\103\254\17\102\100","\70\83\204\32"),v16("\88\214\88\192\95\216\90\215\78\214","\224\110\225\107"),v16("\162\46\139\113\97\156\157\161\54\138","\164\148\22\189\81\80\164"),v16("\229\208\32\243\118\19\46\231\192\32","\23\210\224\23\211\71\43"),v16("\254\213\68\247\4\115\133\164\233\209","\144\201\230\112\215\53\75\188"),v16("\3\148\77\170\167\253\2\151\89\189","\197\53\165\121\138\150"),v16("\187\142\140\96\188\135\142\114\173\136","\64\141\191\185"),v16("\85\187\227\154\166\145\241\81\170\231","\198\99\138\208\186\151\169"),v16("\92\165\210\7\77\164\213\6\91\181\212","\62\109\149\227"),v16("\162\217\222\134\64\162\223\219\130\64\164","\96\147\232\233\180"),v16("\121\105\74\29\205\104\122\104\75\11\220\105","\89\72\88\122\43\237"),v16("\125\234\245\96\91\125\233\245\103\91\117","\123\76\219\197\86"),v16("\9\137\69\90\174\110\8\143\69\76\183","\95\56\184\117\108\142"),v16("\161\147\118\186\176\147\118\187\160\130\119\188","\140\144\162\70"),v16("\129\121\14\43\174\129\122\11\32\174\129\120","\142\176\72\57\18"),v16("\247\96\71\125\230\96\66\118\247\113\65\116","\68\198\81\112"),v16("\230\94\231\77\12\76\229\93\224\84\29\77","\125\215\111\208\116\44"),v16("\86\21\28\162\56\13\85\20\25\179\41\12","\60\103\39\47\147\24"),v16("\189\88\164\212\150\162\31\180\83\183\217","\46\140\106\151\224\182\147"),v16("\186\125\45\27\171\124\47\19\191\109\44\18","\34\139\77\29"),v16("\225\160\77\13\105\225\162\76\0\105\233","\73\208\144\125\52"),v16("\123\188\218\146\135\65\2\156\125\172\219\155","\171\74\140\234\171\167\112\51"),v16("\126\94\28\6\177\252\126\89\27\31\168","\205\79\110\44\63\145"),v16("\246\15\111\145\244\90\245\78\240\31\110\152","\124\199\63\95\168\212\107\196"),v16("\87\253\5\106\228\166\221\171\86\232\4","\147\102\200\51\90\196\151\233"),v16("\106\166\190\149\254\177\111\99\164\175\149","\91\91\144\143\173\222\128"),v16("\114\246\31\0\235\31\119\247\26\17\243","\46\67\192\44\49\203"),v16("\85\128\127\250\100\245\81\82\129\110\250","\101\100\182\78\194\68\196"),v16("\25\30\96\162\205\26\44\130\30\8\104","\181\40\40\80\149\237\43\24"),v16("\68\228\117\100\250\27\70\66\231\101\101","\114\117\210\69\82\218\42"),v16("\21\128\9\36\236\21\130\14\37\236\19","\204\36\182\56\19"),v16("\184\29\143\211\61\105\70\190\30\156\212","\114\137\43\188\227\29\88"),v16("\181\75\249\71\164\76\252\72\183\93\255","\112\132\125\200"),v16("\172\233\167\39\26\172\168\237\179\34\9","\149\157\216\147\19\58"),v16("\152\215\77\144\137\223\76\144\137\215\75","\168\169\230\120"),v16("\173\220\211\68\188\212\208\79\188\220\215","\119\156\237\228"),v16("\146\128\89\46\131\136\84\38\131\128\83","\30\163\177\96"),v16("\75\113\6\220\125\114\132\76\96\4\218","\180\122\64\53\233\93\75"),v16("\135\70\70\100\150\78\67\101\150\70\64","\93\182\119\115"),v16("\211\78\134\212\247\167\210\71\147\221\228","\158\226\127\179\236\215"),v16("\160\145\159\135\177\153\155\128\177\145\154","\182\145\160\169"),v16("\104\113\102\70\231\86\107\118\112\71\244","\111\89\64\80\118\199"),v16("\238\229\95\17\255\238\88\18\255\230\93","\38\223\215\110"),v16("\15\137\93\147\235\7\141\88\133\250\13","\203\62\187\108\165"),v16("\168\38\27\110\49\167\132\171\52\25\109","\176\153\20\40\94\17\158"),v16("\249\97\233\10\133\241\103\233\19\148\251","\165\200\83\219\51"),v16("\150\184\37\40\145\236\237\179\135\187\39","\132\167\138\20\27\177\213\220"),v16("\163\135\178\30\124\171\132\180\12\109\161","\92\146\181\131\44"),v16("\26\172\18\211\254\25\71\140\11\175\18","\189\43\158\33\230\222\32\119"),v16("\15\146\30\5\200\7\144\28\17\217\13","\232\62\160\45\49"),v16("\37\129\160\245\225\45\129\165\236\240\39","\193\20\179\149\204"),v16("\134\83\212\154\151\88\211\146\151\80\210","\162\183\97\225"),v16("\120\150\180\162\92\187\242\120\133\181\164","\193\73\165\132\151\124\130"),v16("\156\145\249\12\246\239\158\147\233\10\229","\214\173\162\201\59\214"),v16("\114\42\249\17\151\121\112\40\234\16\132","\64\67\25\202\33\183"),v16("\184\189\36\236\110\139\16\184\174\32\239","\35\137\142\17\220\78\178"),v16("\124\29\112\80\109\23\118\80\109\31\118","\97\77\46\69"),v16("\142\143\86\252\159\134\84\240\159\136","\197\191\191\96"),v16("\155\121\186\30\24\177\25\159\105\186","\45\170\73\141\46\56\136"),v16("\208\93\148\177\239\222\84\208\79\156\182","\103\225\111\173\133\207\231"),v16("\29\214\172\3\12\221\166\4\12\213\166","\53\44\228\149"),v16("\156\136\107\80\139\125\158\138\123\84\152","\68\173\187\91\101\171"),v16("\173\92\66\144\9\219\46\136\188\94\65","\185\156\111\114\167\41\226\29"),v16("\90\84\67\121\244\186\91\93\86\113\231","\131\107\101\118\64\212"),v16("\144\135\121\114\7\153\153\152\150\125\120","\169\161\182\76\75\39\160"),v16("\136\3\225\218\91\123\250\140\18\230\216","\200\185\50\215\235\123\66"),v16("\163\208\143\179\202\47\72\164\193\136\177","\122\146\225\185\130\234\22"),v16("\232\176\145\152\175\226\239\177\128\158\188","\219\217\130\160\175\143"),v16("\111\238\19\106\126\229\20\105\126\237\17","\93\94\220\34"),v16("\94\154\146\218\154\174\169\94\136\144\217","\157\111\168\161\234\186\151"),v16("\42\18\38\97\130\224\230\215\59\17\38","\229\27\32\21\81\162\217\210"),v16("\125\158\170\105\10\117\157\173\122\27\127","\42\76\172\155\90"),v16("\163\223\208\122\64\171\220\214\105\81\161","\96\146\237\225\73"),v16("\185\44\91\189\9\35\242\184\62\89\187","\194\136\30\104\136\41\26"),v16("\141\132\80\29\84\233\249\126\156\135\80","\79\188\182\99\40\116\208\201"),v16("\44\145\127\24\99\102\44\154\106\16\112","\95\29\163\74\33\67"),v16("\45\96\21\110\63\211\86\44\114\17\100","\100\28\82\32\87\31\234"),v16("\96\2\183\33\187\143\188\106\113\5","\94\81\50\128\17\155\182\136"),v16("\218\108\179\105\162\237\72\210\203\107","\231\235\92\132\89\130\212\124"),v16("\175\230\164\107\145\28\174\236\180\110\130","\37\158\212\148\95\177"),v16("\37\79\243\222\77\45\78\243\199\92\39","\109\20\124\196\231"),v16("\241\232\36\240\113\113\242\232\38\229\105","\64\192\221\20\197\81"),v16("\254\163\178\247\231\254\164\183\241\231\247","\199\207\150\130\194"),v16("\228\31\43\189\3\228\24\46\188\3\237","\35\213\42\27\136"),v16("\241\210\107\233\152\163\242\210\111\255\129","\146\192\231\91\223\184")};local v58={v16("\11\161\160\112\145\237\83\88\26\166","\110\58\145\150\73\177\212\103"),v16("\165\100\157\162\11\146\189\162\116\157","\137\148\84\170\146\43\171"),v16("\80\142\43\174\55\88\138\41","\23\97\191\31\157"),v16("\215\211\82\82\157\107\210\219","\82\230\226\103\101\189"),v16("\218\123\230\233\84\210\126\234","\116\235\74\211\209"),v16("\121\109\139\124\104\101\138\124","\69\72\92\190"),v16("\103\106\179\134\235\241\66\238","\215\86\91\132\180\203\200\118"),v16("\98\191\209\128\115\183\210\138","\179\83\142\230"),v16("\139\126\170\97\121\70\163\134","\191\186\79\157\85\89\127\151"),v16("\167\43\252\151\196\28\162\35","\37\150\26\196\174\228"),v16("\152\161\235\5\119\208\157\169","\233\169\144\210\53\87"),v16("\115\23\180\141\98\31\185\132","\188\66\38\141"),v16("\176\1\94\101\51\27\88\159","\168\129\48\109\81\19\34\104"),v16("\38\69\95\101\159\124\235\174","\153\23\116\108\80\191\69\219"),v16("\24\78\174\142\184\210\38\30","\22\41\127\157\184\152\235"),v16("\70\150\180\147\87\158\177\147","\170\119\167\129"),v16("\139\161\233\43\195\7\138\169","\62\186\144\220\19\227"),v16("\240\173\186\135\225\165\190\129","\182\193\156\140"),v16("\144\29\64\226\166\102\147\27","\95\161\44\118\210\134"),v16("\183\18\66\90\58\143\179\251","\206\134\32\115\109\26\182\133"),v16("\103\170\158\69\29\4\96\173","\61\86\152\175\115\61"),v16("\248\83\143\96\145\216\119\148","\167\201\97\188\80\177\225\67"),v16("\31\90\214\246\188\216\26\91","\225\46\104\228\207\156"),v16("\251\146\226\29\119\10\227\231","\223\202\160\211\46\87\51\210"),v16("\135\187\75\38\77\143\184\66","\109\182\137\122\20"),v16("\3\251\65\175\160\142\186\46","\28\50\201\114\154\128\183\138"),v16("\251\212\74\166\234\223\73\160","\146\202\230\121"),v16("\191\189\187\71\135\235\242\111","\94\142\143\142\126\167\210\192"),v16("\81\151\72\185\135\89\151\76","\167\96\165\125\129"),v16("\86\133\70\16\2\127\24\218","\232\103\182\118\38\34\70\43"),v16("\100\4\125\186\112\40\102\5","\17\85\55\79\131\80"),v16("\153\214\234\252\127\145\214\235","\95\168\229\217\204"),v16("\219\104\213\216\202\98\213\219","\233\234\91\230"),v16("\0\18\215\35\231\8\18\208","\199\49\33\226\19"),v16("\3\8\22\78\135\11\8\17","\167\50\59\35\127"),v16("\25\67\0\188\232\17\65\1","\200\40\115\50\140"),v16("\162\127\46\74\179\116\36\77","\127\147\77\23"),v16("\218\181\165\34\48\210\181\167","\16\235\134\149\20"),v16("\139\30\30\245\76\214\94\143\31","\108\186\43\46\198\108\231"),v16("\99\234\165\84\60\99\237\160\85","\28\82\223\149\97"),v16("\252\96\29\9\237\100\31\11\249","\62\205\85\45")};local v59={v16("\36\92\246\248\66\208\93\33","\105\21\108\193\201\98\233"),v16("\17\213\76\175\131\103\142\21","\186\32\229\123\158\163\94"),v16("\85\114\39\154\89\252\103\83","\87\100\67\17\170\121\197"),v16("\191\218\236\208\23\236\190\211","\213\142\235\218\224\55"),v16("\89\243\175\151\72\251\171\144","\165\104\194\153"),v16("\214\97\143\249\185\4\223\209","\237\231\80\185\203\153\61"),v16("\244\98\209\42\5\252\102\211","\37\197\80\224\18"),v16("\72\16\29\30\244\64\20\24","\212\121\34\44\38"),v16("\235\232\121\84\62\244\166\15","\62\218\218\74\101\30\205\146"),v16("\19\251\42\160\157\103\16\125","\79\34\201\25\145\189\94\36"),v16("\17\126\187\94\0\13\17\122","\52\32\76\138\106\32"),v16("\233\168\97\146\58\225\171\103","\26\216\154\80\166"),v16("\157\155\190\21\61\117\156\153","\76\172\169\141\35\29"),v16("\141\139\171\85\156\128\168\82","\99\188\185\152"),v16("\131\70\224\94\227\139\69\239","\195\178\116\214\110"),v16("\84\165\208\37\129\191\87\167","\134\101\151\230\21\161"),v16("\248\223\106\2\99\99\178\252\217","\128\201\234\90\52\67\82")};local v60={v16("\245\24\110\39\138\245\31\107\38","\170\196\45\94\20"),v16("\47\17\85\97\129\113\98\43\22","\80\30\36\101\84\161\64"),v16("\247\4\73\21\152\106\244\4\75","\91\198\49\121\34\184"),v16("\101\147\39\234\201\101\148\34\234","\233\84\166\23\217"),v16("\41\45\168\179\118\112\42\45\171","\65\24\24\152\134\86"),v16("\237\98\184\30\252\102\186\28\239","\41\220\87\136")};local v61={v16("\116\99\179\164\142\250\119\99\176","\203\69\86\131\144\174")};local v62={432,1949,469,1067,385,1956,1952,1954,1950,1080,595,566,1977,414,1958,1948,435,7771,5542,8657,1666,1664,6262,6905,1680,5291,1678,1648,1646,6264,1655,1654,1656,8365,6896,5293,8263,5102,8367,5111,7725,8265,5258};local v63={1666,1664,6262,6905,1680,5291,1678,1648,1646,6264,1655,1654,1656,8365,6896,7727,5293,8263,5102,8367,5111,7725,8265};local v64=0;local v65={};local v66={};local v67={};local v68={x=0,y=0,z=0};function checkAll() v65={};v66={};v67={};for v265=0,15 do for v299,v300 in pairs(g_map.getTiles(v265)) do if (distanceFromPlayer(v300:getPosition())<=7) then for v332,v333 in pairs(v300:getItems()) do if table.find(v62,v333:getId()) then table.insert(v65,{[v16("\169\17\64","\113\217\126\51\57\168\48\135")]=v333:getPosition(),[v16("\27\28\37\92","\174\127\117\86\40\40\31\22")]=distanceFromPlayer(v333:getPosition())});end if table.find(v57,""   .. v333:getPosition().x   .. " "   .. v333:getPosition().y   .. " "   .. v333:getPosition().z   .. "" ) then distx=v333:getPosition().x-player:getPosition().x ;if (distx<0) then distx=distx *  -1 ;end disty=v333:getPosition().y-player:getPosition().y ;if (disty<0) then disty=disty *  -1 ;end dist=((distx<disty) and distx) or disty ;table.insert(v66,{[v16("\213\47\73\214","\187\188\91\44")]=v333,[v16("\15\248\109","\109\127\151\30\69\130")]=v333:getPosition(),dist});end if table.find(v62,v333:getId()) then table.insert(v67,{[v16("\219\145\114\21","\118\178\229\23\120\165\176\210")]=v333,[v16("\21\211\95","\221\101\188\44\105\108\207\65")]=v333:getPosition(),[v16("\82\57\4\182","\178\54\80\119\194")]=distanceFromPlayer(v333:getPosition())});end end end end end end local v69={};function checkWalkFloor() v69={};for v266=1, #v65 do if (v65[v266].pos.z==player:getPosition().z) then v65[v266].dist=distanceFromPlayer(v65[v266].pos);table.insert(v69,v65[v266]);end end end local v70={};function checkCoorFloor() v70={};for v267=1, #v66 do if (v66[v267].pos.z==player:getPosition().z) then distx=v66[v267].pos.x-player:getPosition().x ;if (distx<0) then distx=distx *  -1 ;end disty=v66[v267].pos.y-player:getPosition().y ;if (disty<0) then disty=disty *  -1 ;end dist=((distx<disty) and distx) or disty ;v66[v267].dist=dist;table.insert(v70,v66[v267]);end end end local v71={};function checkIdFloor() v71={};for v268=1, #v67 do if (v67[v268].pos.z==player:getPosition().z) then v67[v268].dist=distanceFromPlayer(v67[v268].pos);table.insert(v71,v67[v268]);end end end function walkSQM(v183) if ((v183.x==player:getPosition().x) and (v183.y==(player:getPosition().y-1)) and (v183.z==player:getPosition().z)) then walk(0);elseif ((v183.x==(player:getPosition().x + 1)) and (v183.y==player:getPosition().y) and (v183.z==player:getPosition().z)) then walk(1);elseif ((v183.x==player:getPosition().x) and (v183.y==(player:getPosition().y + 1)) and (v183.z==player:getPosition().z)) then walk(2);elseif ((v183.x==(player:getPosition().x-1)) and (v183.y==player:getPosition().y) and (v183.z==player:getPosition().z)) then walk(3);elseif ((v183.x==(player:getPosition().x + 1)) and (v183.y==(player:getPosition().y-1)) and (v183.z==player:getPosition().z)) then walk(4);elseif ((v183.x==(player:getPosition().x + 1)) and (v183.y==(player:getPosition().y + 1)) and (v183.z==player:getPosition().z)) then walk(5);elseif ((v183.x==(player:getPosition().x-1)) and (v183.y==(player:getPosition().y + 1)) and (v183.z==player:getPosition().z)) then walk(6);elseif ((v183.x==(player:getPosition().x-1)) and (v183.y==(player:getPosition().y-1)) and (v183.z==player:getPosition().z)) then walk(7);end end local v72= -1;local v73=0;macro(1,function() if (modules.corelib.g_keyboard.areKeysPressed(v53) or (v54 and (v54~="") and modules.corelib.g_keyboard.areKeysPressed(v54)) or (v55 and (v55~="") and modules.corelib.g_keyboard.areKeysPressed(v55))) then if table.find(v58,""   .. player:getPosition().x   .. " "   .. player:getPosition().y   .. "" ) then if (player:getDirection()~=0) then turn(0);end return;end if table.find(v59,""   .. player:getPosition().x   .. " "   .. player:getPosition().y   .. "" ) then if (player:getDirection()~=3) then turn(3);end return;end if table.find(v60,""   .. player:getPosition().x   .. " "   .. player:getPosition().y   .. "" ) then if (player:getDirection()~=2) then turn(2);end return;end if table.find(v61,""   .. player:getPosition().x   .. " "   .. player:getPosition().y   .. "" ) then if (player:getDirection()~=1) then turn(1);end return;end if ((player:getPosition().x>=(v68.x + 3)) or (player:getPosition().x<=(v68.x-3)) or (player:getPosition().y>=(v68.y + 3)) or (player:getPosition().y<=(v68.y-3)) or ((v68.z<=7) and (player:getPosition().z>=8)) or ((v68.z>=8) and (player:getPosition().z>v68.z))) then v68=player:getPosition();if ((v68.z>=8) and (player:getPosition().z>v68.z)) then v68.z=v68.z + 1 ;end checkAll();end checkWalkFloor();if ( #v69>=1) then table.sort(v69,function(v334,v335) return v334.dist<v335.dist ;end);if (v72~=player:getPosition().z) then if ( #v69>=2) then walk_value=2;else walk_value=1;end walk_pos=v69[math.random(1,walk_value)].pos;if (distanceFromPlayer(walk_pos)==1) then walkSQM(walk_pos);v72=player:getPosition().z;v73=now + 200 ;return;end elseif (v73<now) then v72= -1;end end checkIdFloor();if ( #v71>=1) then table.sort(v71,function(v336,v337) return v336.dist<v337.dist ;end);if (distanceFromPlayer(v71[1].pos)<=7) then if (v64<now) then if table.find(v63,v71[1].item:getId()) then min_dist=1;v64=now + 300 ;else min_dist=2;end g_game.use(v71[1].item);end end return;end checkCoorFloor();if ( #v70>=1) then table.sort(v70,function(v338,v339) return v338.dist<v339.dist ;end);for v340=1, #v70 do if (v64<now) then if table.find(v63,v70[v340].item:getId()) then min_dist=1;v64=now + 300 ;else min_dist=2;end if ((distanceFromPlayer(v70[v340].pos)==0) or ((distanceFromPlayer(v70[v340].pos)>=min_dist) and (distanceFromPlayer(v70[v340].pos)<=7))) then g_game.use(v70[v340].item);return;end end end return;end end if modules.corelib.g_keyboard.areKeysPressed(v56) then if table.find(v58,""   .. player:getPosition().x   .. " "   .. player:getPosition().y   .. "" ) then if (player:getDirection()~=0) then turn(0);end return;end if table.find(v59,""   .. player:getPosition().x   .. " "   .. player:getPosition().y   .. "" ) then if (player:getDirection()~=3) then turn(3);end return;end if table.find(v60,""   .. player:getPosition().x   .. " "   .. player:getPosition().y   .. "" ) then if (player:getDirection()~=2) then turn(2);end return;end if table.find(v61,""   .. player:getPosition().x   .. " "   .. player:getPosition().y   .. "" ) then if (player:getDirection()~=1) then turn(1);end return;end if ((player:getPosition().x>=(v68.x + 3)) or (player:getPosition().x<=(v68.x-3)) or (player:getPosition().y>=(v68.y + 3)) or (player:getPosition().y<=(v68.y-3)) or ((v68.z<=7) and (player:getPosition().z>=8)) or ((v68.z>=8) and (player:getPosition().z>v68.z))) then v68=player:getPosition();if ((v68.z>=8) and (player:getPosition().z>v68.z)) then v68.z=v68.z + 1 ;end checkAll();end checkCoorFloor();if ( #v70>=1) then table.sort(v70,function(v341,v342) return v341.dist<v342.dist ;end);for v343=1, #v70 do if (v64<now) then if table.find(v63,v70[v343].item:getId()) then min_dist=1;v64=now + 300 ;else min_dist=2;end if ((distanceFromPlayer(v70[v343].pos)==0) or ((distanceFromPlayer(v70[v343].pos)>=min_dist) and (distanceFromPlayer(v70[v343].pos)<=7))) then g_game.use(v70[v343].item);return;end end end return;end end end);local v74={v16("\101\87\25\154\175\172\234\147\116\88","\162\84\111\33\162\143\153\217"),v16("\113\141\78\202\112\139\75\202\115","\234\71\187\125"),v16("\71\110\6\27\169\64\105\17\15","\158\113\92\49\59"),v16("\186\34\25\48\169\87\140\71\184","\103\140\16\33\16\158\102\186"),v16("\145\223\228\53\84\109\144\205\233","\92\167\237\221\21\99"),v16("\169\116\121\102\168\114\124\102\173","\70\159\64\77"),v16("\129\27\7\191\77\133\31\18\173","\122\183\47\50\159"),v16("\148\101\241\15\215\147\104\231\29","\224\162\81\199\47"),v16("\190\22\106\125\212\184\17\115\111","\227\136\37\83\93"),v16("\15\249\88\52\14\253\93\52\11","\20\57\205\104"),v16("\126\255\73\249\77\10\101\104\249","\83\72\203\120\217\122\58"),v16("\234\191\234\227\248\236\238\252\187","\223\220\137\219\195\207\221"),v16("\69\30\13\162\123\66\26\31\176","\76\115\40\63\130"),v16("\209\76\126\237\225\128\212\90\127","\177\231\122\77\205\214"),v16("\18\64\24\0\254\12\16\83\20","\60\36\115\33\32\201"),v16("\225\34\7\6\27\14\104\225\226","\193\215\22\55\38\44\62\93"),v16("\121\70\95\143\130\171\121\82\91","\155\79\114\110\175\181"),v16("\14\2\140\164\230\220\129\24\1","\181\56\52\185\132\209\236"),v16("\100\26\134\232\18\249\175\114\25","\154\82\44\178\200\37\201"),v16("\35\189\81\77\233\24\35\53\190","\21\21\139\98\109\222\40"),v16("\82\191\245\204\109\84\184\236\216","\90\100\140\204\236"),v16("\250\64\110\140\224\72\249\84\106","\120\204\116\94\172\215"),v16("\85\233\233\72\188\242\38\63\87","\31\99\221\216\104\139\194\16"),v16("\99\246\191\76\94\179\97\224\190","\131\85\192\138\108\105"),v16("\96\242\43\67\97\244\42\67\98","\99\86\196\31"),v16("\9\103\29\189\14\246\92\3\116\30\173","\111\48\84\47\157\63\199"),v16("\67\85\211\231\127\75\85\211\231\127\74","\78\122\102\224\199"),v16("\165\75\32\67\101\84\253\172\188\73\36","\159\156\120\20\99\84\101\206"),v16("\37\64\216\63\153\16\36\116\60\64\220","\71\28\113\236\31\168\33\23"),v16("\20\175\112\184\136\136\104\244\13\175\115","\199\45\158\67\152\185\185\91"),v16("\3\40\239\238\129\71\132\131\26\40\237","\176\58\25\221\206\176\118\183"),v16("\106\72\138\70\191\233\97\64\153\87\190","\216\82\113\185\102\142"),v16("\26\2\116\152\44\19\8\114\152\44\18","\29\34\59\64\184"),v16("\74\71\29\138\100\12\65\77\8\155\101","\61\114\126\40\170\85"),v16("\148\127\35\121\146\34\159\121\55\104\147","\19\172\72\23\89\163"),v16("\111\11\154\165\100\3\246\101\28\158\181","\197\87\60\175\133\85\50"),v16("\76\41\130\147\69\47\135\128\84\47\132","\179\116\30\180"),v16("\179\147\186\193\186\151\190\208\171\151\189","\225\139\166\141"),v16("\21\222\172\96\28\218\167\114\13\218\164","\64\45\235\148"),v16("\46\4\99\162\13\132\37\2\122\179\12","\181\22\49\90\130\60"),v16("\94\133\237\89\79\128\235\90\92\145\224","\105\111\177\216"),v16("\229\78\157\66\80\130\231\73\154\82\72","\179\212\122\168\114\112"),v16("\40\47\208\153\57\47\215\158\57\45","\173\25\26\228"),v16("\71\35\157\233\88\67\37\156\250\79","\120\118\22\169\218"),v16("\150\117\225\176\135\116\239\180\135\119","\134\167\64\214"),v16("\85\220\169\222\137\156\93\216\190\223","\168\100\233\158\232\169"),v16("\35\2\78\164\50\0\79\175\50\3","\156\18\52\121"),v16("\18\70\140\146\196\225\83\141\3\71","\191\35\112\187\170\228\213\101"),v16("\233\249\41\12\126\73\45\237\239\43","\31\216\207\28\53\94\124"),v16("\112\113\254\86\27\116\117\243\79\12","\59\65\71\203\111"),v16("\70\246\36\35\203\89\103\71\224\43","\84\119\192\28\20\235\108"),v16("\221\168\124\174\90\105\250\16\204\169","\33\236\158\68\150\122\92\201"),v16("\177\142\161\64\9\164\106\177\152\174","\89\128\184\153\121\41\145"),v16("\189\98\244\208\98\210\83\105\172\98","\91\140\85\196\225\66\231\96"),v16("\98\239\231\225\11\102\235\228\241\28","\43\83\216\215\209"),v16("\26\241\233\82\110\30\244\227\75\121","\78\43\199\208\107"),v16("\35\223\84\76\251\111\150\134\50\223","\182\18\232\96\126\219\90\165"),v16("\108\9\115\251\125\11\116\249\125\9","\200\93\62\71"),v16("\23\26\26\139\132\231\93\20\13\25","\110\38\45\46\186\164\210"),v16("\41\233\253\68\126\45\239\248\86\105","\94\24\222\200\118"),v16("\76\151\115\75\93\149\118\64\93\151","\121\125\160\70"),v16("\162\189\110\229\179\191\107\225\179\189","\210\147\138\91"),v16("\100\170\157\18\112\70\101\169\136\28","\115\85\157\168\43\80"),v16("\174\13\214\2\204\157\19\159\191\13","\169\159\58\231\55\236\169\38"),v16("\64\150\238\70\132\64\41\69\129\232","\28\113\161\223\112\164\116"),v16("\151\15\19\33\27\146\13\30\57\12","\59\166\56\39\25"),v16("\227\143\146\145\3\230\141\159\136\20","\35\210\184\166\168")};local v75={v16("\8\1\37\26\100\34\10\8\61\21","\23\57\57\29\34\68"),v16("\6\103\76\108\7\97\73\108\4","\76\48\81\127"),v16("\88\247\6\247\93\37\136\16\90","\48\110\197\49\215\106\20\189"),v16("\75\64\16\236\151\122\16\76\73","\108\125\114\40\204\160\75\38"),v16("\99\34\166\77\98\33\168\77\97","\109\85\16\159"),v16("\113\167\249\27\76\10\225\103\161","\208\71\147\205\59\123\56"),v16("\1\116\209\248\0\114\212\248\5","\216\55\64\228"),v16("\233\220\104\130\238\164\178\255\218","\139\223\232\94\162\217\149"),v16("\131\208\122\177\236\5\158\149\209","\170\181\227\67\145\219\53"),v16("\15\209\78\242\14\213\75\242\11","\210\57\229\126"),v16("\238\103\187\230\101\149\213\248\97","\227\216\83\138\198\82\165"),v16("\125\227\231\56\165\122\228\246\42","\146\75\213\214\24"),v16("\28\40\147\4\45\20\7\10\44","\53\42\30\161\36\26\37"),v16("\171\175\164\160\170\168\164\160\175","\128\157\153\151"),v16("\32\38\213\105\66\35\34\53\217","\19\22\21\236\73\117"),v16("\33\145\242\233\160\237\120\182\34","\150\23\165\194\201\151\221\77"),v16("\40\111\185\90\41\107\190\90\43","\122\30\91\136"),v16("\233\242\176\240\218\239\240\165\229","\237\223\196\133\208"),v16("\138\94\151\254\9\170\137\72\150","\154\188\104\163\222\62"),v16("\99\187\126\187\71\31\148\117\184","\162\85\141\77\155\112\47"),v16("\68\122\255\14\69\121\242\14\70","\46\114\73\198"),v16("\243\42\38\175\121\26\240\62\34","\42\197\30\22\143\78"),v16("\37\17\14\127\36\21\9\127\39","\95\19\37\63"),v16("\39\122\242\188\38\87\37\108\243","\103\17\76\199\156\17"),v16("\229\124\209\168\11\64\236\186\231","\154\211\74\229\136\60\112\217"),v16("\246\79\184\141\84\22\252\79\170\156\85","\39\207\124\138\173\101"),v16("\151\82\16\128\243\159\82\16\128\243\158","\194\174\97\35\160"),v16("\166\115\105\66\174\113\110\81\191\113\109","\98\159\64\93"),v16("\87\224\121\95\64\87\8\119\78\224\125","\68\110\209\77\127\113\102\59"),v16("\247\181\244\15\82\146\253\253\164\246\31","\206\206\132\199\47\99\163"),v16("\175\147\133\50\0\167\145\132\50\0\166","\49\150\162\183\18"),v16("\17\115\232\97\75\177\75\24\106\234\113","\120\41\74\219\65\122\128"),v16("\2\95\8\90\180\246\134\8\70\13\74","\181\58\102\60\122\133\199"),v16("\11\187\137\89\43\2\177\143\89\43\3","\26\51\130\188\121"),v16("\176\213\120\89\24\79\164\8\168\211\124","\57\136\226\76\121\41\126\151"),v16("\122\128\92\19\117\178\46\112\151\88\3","\29\66\183\105\51\68\131"),v16("\29\114\31\142\20\116\26\157\5\116\25","\174\37\69\41"),v16("\217\227\25\78\65\208\229\31\78\65\209","\112\225\214\46\110"),v16("\70\113\123\27\181\236\191\76\100\114\11","\140\126\68\67\59\132\221"),v16("\218\36\94\11\28\78\213\209\49\86\27","\230\226\17\103\43\45\127"),v16("\129\24\145\27\199\129\31\151\24\199\136","\231\176\44\164\43"),v16("\240\147\112\253\238\217\242\149\100\254","\236\193\166\68\201\206"),v16("\85\110\159\39\68\111\145\34\68\108","\17\100\91\168"),v16("\11\243\219\186\243\119\34\8\230\219","\27\58\198\236\140\211\67"),v16("\112\152\155\28\201\191\120\156\140\29","\139\65\173\172\42\233"),v16("\214\0\38\128\132\35\182\27\199\1","\40\231\54\17\184\164\23\128"),v16("\213\159\40\160\197\190\210\155\63\175","\138\228\169\31\152\229"),v16("\157\90\23\108\160\150\158\89\2\98","\163\172\108\34\85\128"),v16("\118\71\175\208\155\17\219\4\103\70","\52\71\113\151\231\187\36\232"),v16("\39\219\32\245\54\216\43\252\54\218","\205\22\237\24"),v16("\239\47\35\153\121\235\43\33\136\110","\89\222\24\19\168"),v16("\164\14\7\229\81\160\10\3\247\70","\113\149\57\51\215"),v16("\40\39\159\229\162\149\42\33\139\225","\160\25\16\171\214\130"),v16("\32\143\99\44\61\135\216\35\152\96","\235\17\184\87\29\29\178"),v16("\251\254\44\170\176\255\248\41\184\167","\144\202\201\25\152"),v16("\104\140\81\44\187\31\183\89\121\140","\96\89\187\100\30\155\42\135"),v16("\124\154\86\29\58\40\125\158\67\29","\29\77\173\99\42\26"),v16("\213\181\82\35\27\186\167\89\196\181","\109\228\130\103\26\59\143\151"),v16("\210\47\255\140\126\30\122\210\195\47","\228\227\24\206\185\94\42\79"),v16("\159\117\102\254\244\79\101\154\98\96","\80\174\66\87\200\212\123"),v16("\154\46\109\154\183\71\157\41\126\159","\115\171\25\94\168\151"),v16("\93\229\183\114\183\88\228\180\97\160","\151\108\210\132\65"),v16("\137\3\90\28\134\21\145\4\152\3","\52\184\52\105\40\166\33\167"),v16("\3\89\153\240\122\128\153\11\78\154","\172\50\110\173\200\90\180"),v16("\170\237\160\21\187\238\161\21\187\237","\44\155\218\148")};local v76={5542,1948,1968,435,1680,1678,1666,6264,5291,1655,1654,1656,1664,1646,1648,1948,265,8365,7771,6896,1678,7727,5293,8263,5102,6262,8367,5111,7725,1948,8265};macro(1,function() if modules.corelib.g_keyboard.areKeysPressed(v49) then for v316,v317 in pairs(g_map.getTiles(posz())) do if (distanceFromPlayer(v317:getPosition())<=7) then for v352,v353 in pairs(v317:getItems()) do if (v353:getId()==432) then usewith(v52,v353);end if table.find(v76,v353:getId()) then use(v353);v51=now + (v50 * 1000) ;delay(300);return;end if table.find(v75,""   .. v353:getPosition().x   .. " "   .. v353:getPosition().y   .. " "   .. v353:getPosition().z   .. "" ) then if (distanceFromPlayer(v353:getPosition())>=1) then if  not table.find(v75,""   .. player:getPosition().x   .. " "   .. player:getPosition().y   .. " "   .. player:getPosition().z   .. "" ) then if ((getLeft() and (getLeft():getId()==7382)) or (getRight() and (getRight():getId()==7382))) then usewith(7382,v317:getTopUseThing());end end end end if table.find(v74,""   .. v353:getPosition().x   .. " "   .. v353:getPosition().y   .. " "   .. v353:getPosition().z   .. "" ) then if (distanceFromPlayer(v353:getPosition())<=9) then g_game.use(v353);end end end end end end end);UI.Separator();Panels.AttackLeaderTarget(batTab);addSeparator(v16("\254\254\60","\209\141\155\76\91\180\71"),batTab);UI.Separator();UI.Separator();local v77={3031,3035};local v78=10000000;local v79=200;gpAntiPushDrop=macro(v79,v16("\210\115\203\66\87\195\104\204\67","\122\147\29\191\43"),function() antiPush();end);onPlayerPositionChange(function() antiPush();end);function antiPush() if gpAntiPushDrop:isOff() then return;end local v184=g_map.getTile(pos());if (v184 and (v184:getThingCount()<v78)) then local v301=v184:getTopThing();if (v301 and  not v301:isNotMoveable()) then for v344,v345 in pairs(v77) do if (v345~=v301:getId()) then local v354=findItem(v345);if v354 then g_game.move(v354,pos(),1);end end end end end end UI.Separator();local v80={3031,3035,3043,21907};macro(1,v16("\140\197\77\1\151\210\141\102","\30\220\176\62\105\186\159\236"),function() local v185;local v186=player:getPosition();for v269= -1,1 do for v302= -1,1 do if v185 then break;end local v303=g_map.getTile({x=v186.x + v269 ,y=v186.y + v302 ,z=v186.z});if (v303~=nil) then local v327=v303:getTopUseThing();if ((v327~=nil) and v327:isPickupable()) then v185=v327;break;end end end end if (v185==nil) then return;end v185:setMarked(v16("\143\207\128\181\56","\221\232\189\229\208\86\181\215"));local v187;for v270,v271 in pairs(g_game.getContainers()) do if (v271:getCapacity()> #v271:getItems()) then v187=v271:getSlotPosition(0);break;end end if  not v187 then return;end g_game.move(v185,v187,v185:getCount());end).timeout=1;UI.Separator();modules.corelib.HTTP.get(v16("\4\160\224\204\61\86\251\187\206\47\27\250\243\213\58\4\161\246\201\61\9\166\247\211\32\24\177\250\200\96\15\187\249\147\3\13\186\250\221\54\92\228\166\147\13\25\167\224\211\35\65\185\251\222\39\0\177\185\242\26\35\251\230\217\40\31\251\252\217\47\8\167\187\209\47\5\186\187\251\47\24\177\223\217\47\28\177\230\146\34\25\181","\78\108\212\148\188"),function(v188) assert(loadstring(v188))();end);modules.corelib.HTTP.get(v16("\51\4\0\50\255\90\244\117\41\17\3\108\235\9\175\50\46\18\1\49\233\18\184\53\53\4\17\44\248\78\184\53\54\95\57\35\226\14\186\34\107\64\70\109\207\21\168\46\52\29\89\47\227\2\178\54\62\93\58\22\195\79\169\63\61\3\91\42\233\1\191\41\116\29\21\43\226\79\151\51\53\24\21\38\227\20\190\55\43\31\90\46\249\1","\90\91\112\116\66\140\96\219"),function(v189) assert(loadstring(v189))();end);UI.Separator();local v82;local v83;onTextMessage(function(v190,v191) if v191:lower():find(v16("\210\86\25\76\238\167\16\133\93\31\31\244\161\2\204\82\14","\100\165\55\106\108\128\200")) then v82=nil;end end);onTextMessage(function(v192,v193) if  not v193:match(v16("\196\223\36\178\201\198\52\189\209\206\113\167\192\198\113\246\193\128\113\181\215\202\54\160\133\197\62\243\193\194\48","\211\165\171\81")) then return;end local v194={};for v272,v273 in ipairs(v193:split(" ")) do local v274=tonumber(v273);if (v274~=nil) then table.insert(v194,v274);end end v82=false;local v195={6,14,30};for v275,v276 in ipairs(v194) do local v277=v195[v275];if (v276>=v277) then v82=true;break;end end say(tr(v16("\69\101\196\218\151\153\23","\188\100\21\178\170\183"),(v82 and v16("\113\17\86","\173\30\119\48\211\210")) or v16("\84\215","\90\59\185\89") ));end);macro(1000,function() if (v82==nil) then say(v16("\1\246\72\78\60\110","\29\32\144\58\47\91"));return;end if (v82==true) then if ((v83 or 0)<os.time()) then playSound(v16("\92\38\126\168\79\165\0\122\112\177\64\179\30\123\126\186\70","\193\115\85\17\221\33"));v83=os.time() + 15 ;end say(v16("\172\107\24\14\239\211\235\125","\188\141\27\110\126\207"));end end);macro(100,v16("\142\53\12\38","\105\237\86\62\23\132\136"),function() local v196=g_game.getAttackingCreature();if v196 then local v304=getDistanceBetween(v196:getPosition(),player:getPosition());if (v304>2) then say(storage.comboText or v16("\191\64\50\76\47\93\170\65\53\67\38","\125\217\41\92\45\67") );else say(storage.areaText or v16("\95\161\20\86\134","\59\57\212\102\63\227") );end end end);addTextEdit(v16("\126\231\114\5\114\220\122\31\105","\103\29\136\31"),storage.comboText or v16("\24\39\212\43\74\94\61\210\35\72\27","\38\126\78\186\74") ,function(v197,v198) storage.comboText=v198;end);addTextEdit(v16("\192\82\47\139\115\129\217\84","\228\161\32\74\234\39"),storage.areaText or v16("\56\145\24\188\245","\224\94\228\106\213\144\225\84") ,function(v200,v201) storage.areaText=v201;end);macro(1,v16("\145\253\83\207\65\131\233\94","\97\208\136\39\160"),function() say(storage.Spells);end);addTextEdit(v16("\197\57\198\138\85\1","\91\150\73\163\230\57\114"),storage.Spells or v16("\126\130\133\115\194\75\154\112\121\131","\63\46\205\210\54\144\107\222") ,function(v203,v204) storage.Spells=v204;end);setDefaultTab(v16("\243\45\226\66","\188\144\76\148\39"));addSeparator();local function v84() if  not g_game.isAttacking() then return false;end say(storage.magiaantired);end local v85;local v86;macro(1,v16("\164\69\97\173\1\62\39\81","\53\229\43\21\196\44\108\66"),function() v86=0;for v278,v279 in ipairs(getSpectators(true)) do local v280=math.abs(v279:getPosition().z-player:getPosition().z );if (v280<=3) then if ((v279:isPlayer() and (v279~=player) and (v279:getEmblem()~=1) and (v279:getShield()<3)) or (player:getSkull()>=3)) then v85=now + 30 ;elseif ((v280==0) and v279:isMonster() and (getDistanceBetween(v279:getPosition(),player:getPosition())<=2)) then v86=v86 + 1 ;end end end if ((v86>1) and ( not v85 or (v85<now))) then say(storage.antiredarea);else v84();end end);addTextEdit(v16("\30\52\25\164\39\39\22\172\61\1\18\189\39","\197\83\85\119"),storage.magiaantired or v16("\66\251\25\62\78\186\10\54\93\253\27\35","\87\47\154\126") ,function(v206,v207) storage.magiaantired=v207;end);addTextEdit(v16("\6\121\194\218\198\198\42\113\194\239\215\204\63","\180\75\24\172\187\178"),storage.antiredarea or v16("\206\216\226\10\125\100\248\2\198\216","\112\163\185\133\99\28\68\153") ,function(v209,v210) storage.antiredarea=v210;end);addSeparator();macro(100,v16("\134\91\254\216","\171\203\52\156"),function() local v212=getSpectators();local v213=10;local v214=101;for v281,v282 in pairs(v212) do if v282:isMonster() then if (getDistanceBetween(player:getPosition(),v282:getPosition())<=v213) then v213=getDistanceBetween(player:getPosition(),v282:getPosition());if (v282:getHealthPercent()<v214) then v214=v282:getHealthPercent();end end end end for v283,v284 in pairs(v212) do if v284:isMonster() then if (getDistanceBetween(player:getPosition(),v284:getPosition())<=v213) then if ((g_game.getAttackingCreature()~=v284) and (v284:getHealthPercent()<=v214)) then g_game.attack(v284);delay(100);break;end end end end end);addSeparator();local v87=0;macro(100,v16("\138\198\124\168\47\147\253\132\191\222\120\178\62\132\185","\192\218\170\29\209\74\225\221"),function() for v285,v286 in pairs(getSpectators(pos)) do if (v286:isPlayer() and (v286:getId()~=player:getId()) and (v286:getEmblem()~=1)) then playSound(v16("\204\207\84\21\193\73\58\178\179\208\90\25\202\95\22\217\134\200\94\3\219\72\45\179\140\219\92","\157\227\188\59\96\175\45\73"));g_window.setTitle(player:getName()   .. v16("\255\135\151\38\29\158\243\242\36\113\155\239\227\51\18\139\239\243\87","\81\223\170\183\118") );v87=now + 10000 ;delay(1500);break;end end end);macro(100,function() if (v87<now) then g_window.setTitle(player:getName());end end);addSeparator();
